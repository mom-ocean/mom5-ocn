[{"namelist": null, "items": [], "filename": "src/mom5/ocean_bgc/ocean_bgc_restore.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_bgc/ocean_generic_tracer.F90"}, {"namelist": "ocean_ibgc_nml", "items": [{"units": null, "default": ".true.", "type_": "logical", "name": "do_bgc_felim", "description": " If true, then use PO4f as the master variable for biogeochemical calculations (gases, PO4_pre, chl, isotopes). Requires that do_PO4f be true. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "do_isio4", "description": " If true, then do silica cycle and silicon isotopes, iSiO4 and i30SiO4. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "do_carbon_comp", "description": " If true, then do the dissolved inorganic carbon component tracers, Saturation DIC (iDIC_sat) and preformed DIC (iDIC_pre). Requires that do_po4 and/or do_po4f be true, and that do_gasses be true. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "do_radiocarbon", "description": " If true, then do the radiocarbon tracers (iDI14C and iDO14C). Requires that do_po4 and/or do_po4f be true, and that do_gasses be true. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "do_po4", "description": " If true, then do the non-Fe-limited P cycle, iPO4 and iDOP. If either this or do_po4f is true, PO4_pre and chl will be calculated as well. If both do_po4 and do_po4f are true, po4 will be the master variable, unless bgc_felim is true. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "do_ideal", "description": " If true, then do ideal_n and suntan. This does not require any other part of the model. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "do_po4f", "description": " If true, then do the Fe-limited P cycle, with iFe, iPO4f and DOP. If either this or do_po4 is true, PO4_pre and chl will be calculated as well. If both do_po4 and do_po4f are true, po4 will be the master variable, unless do_bgc_felim is true. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "do_gasses", "description": " If true, then do the gases Dissolved Inorganic Carbon (iDIC) and oxygen (iO2). Requires that do_po4 and/or do_po4f be true. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "do_no3_iso", "description": " If true, then do NO3 isotopes, i15NO3, iN18O3 and iDO15N. Requires that do_po4 and/or do_po4f be true. "}], "filename": "src/mom5/ocean_bgc/ocean_ibgc.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_bgc/ocean_pert_co2.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_bgc/ocean_po4_pre.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_bgc/ocmip2_abiotic.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_bgc/ocmip2_biotic.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_bgc/ocmip2_cfc.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_bgc/ocmip2_co2calc.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_bgc/ocmip2_he.F90"}, {"namelist": "ocean_blob_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "really_debug", "description": " Be careful what you wish for, this outputs A LOT of diagnostics to standard out Default is debug_this_module=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "do_bitwise_exact_sum", "description": " When global sum outputs are done there is additional computational expense to ensure that they are bitwise the same across an arbitrary number of processors. However, for debugging purposes, it can be useful for global sums to be the same.  Note, that this differs from bitwise_reproduction in that it do_bitwise_exact_sum only applies to the mpp_global_sum diagnostic. Note that this flag controls the output for all associated blob modules. Default is do_bitwise_exact_sum=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "bitwise_reproduction", "description": " There is additional cost involved in ensuring that results are reproducable across an arbitrary number of processors and across restarts. Bitwise reproduction is a very memory intensive operation and should only be used for debugging.  For bitwise_reproduction=.true. We need to process blobs and their histories in the same relative order regardless of domain decomposition and restarts. To do so, we save the \"history\" of each blob subcycle is saved to a number of arrays (which can be a very memory intensive process) and process them in order. Note that this flag controls reproducability for all associated blob modules. Bitwise reproducibility is only possible with the appropriate compiler flags AND when the simulation is run on hardware that is capable of producing bitwise reproduction. Default is bitwise_reproduction=.false. "}, {"units": "kg", "default": "1.0e3", "type_": "real", "name": "blob_small_mass", "description": " Will delete blobs of mass less than blob_small_mass. Note that this variable is for all associated blob modules.  The deletion of blobs is a conservative action, any mass/tracer fields that are nonzero have the remaining properties transferred back to the Eulerian system.  So, in principle, blob_small_mass can actually be a relatively large number, and the model will remain conservative.  It has been found in certain test cases (with very low tracer values) that setting blob_small_mass to be very small (i.e. <1e2) that roundoff error can cause non-trivial errors.  So, it is recommended that blob_small_mass be no smaller than than 1e3 kg (which is approximately 1.0m**3 -- a very small blob Default is blob_small_mass=1.e3 "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " Writes additional diagnostic data to fms.out.  This also controls debug output for the other related blob modules. Default is debug_this_module=.false. "}, {"units": null, "default": "0.7", "type_": "real", "name": "max_prop_thickness", "description": null}], "filename": "src/mom5/ocean_blobs/ocean_blob.F90"}, {"namelist": "ocean_blob_diag_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "blob_diagnostics", "description": " Logical as to whether diagnostics should be saved or not. Default is .false. "}, {"units": null, "default": "2000000", "type_": "integer", "name": "dump_num", "description": " The number of entried to keep in memory before writing them to file.  The higher the number, the more memory that the module will take up, but, it should lower the frequency of IO operations. Default is 2000000 "}, {"units": null, "default": "1", "type_": "integer", "name": "frequency", "description": " The frequency (in number of E system time steps) that blob diagnostics should be saved. Default is 1 "}, {"units": null, "default": "\"blob_diag_table\"", "type_": "character(len=31)", "name": "diag_table", "description": " Name of file to look for blob diagnostic information. Default is \"blob_diag_table\" "}], "filename": "src/mom5/ocean_blobs/ocean_blob_diag.F90"}, {"namelist": "ocean_blob_dynamic_bottom_nml", "items": [{"units": null, "default": "0.8", "type_": "real", "name": "safety_factor", "description": " Safety factor for the RK scheme (dimensionless). A smaller number should reduce the number of rejected steps, but, decreases the locally extrapolated step.  Corresponds to varrho in the notes. Must be 0<safety_factor<=1.0 Default is safety_factor=0.8 "}, {"units": null, "default": "0.8", "type_": "real", "name": "critical_richardson", "description": " The critical Richardson number for the entrainment velocity.  Default is based on Price and Baringer (1994). Default is critical_richardson=0.8 "}, {"units": null, "default": "0.01", "type_": "real", "name": "rel_error", "description": " Relative error for the RK scheme (dimensionless). A smaller number is more accurate, but, is more computationally expensive. Corresponds to zeta* in the notes. Must be 0<rel_error<=1.0 Default is rel_error=0.01 "}, {"units": null, "default": "5.0e-8", "type_": "real", "name": "det_param", "description": " The detrainment parameter (kg m^2/s). Corresponds to Gamma in the notes. Default is det_param=5.0e-8  "}, {"units": null, "default": "100.0", "type_": "real", "name": "blob_height", "description": null}, {"units": null, "default": "1.0", "type_": "real", "name": "elastic", "description": " The elasticity of a blob's collision with the topography.  Corresponds to epsilon in the notes. Should have values 0<=elastic<=1.0 Values greater than 1 would be super-elastic, and values less than 0 would send the blob in the opposite direction than it should be going in. Default is elastic=1.0 "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_this_module", "description": " Must be true to use this module. Default is use_this_module=.false. "}, {"units": null, "default": "1.0e-3", "type_": "real", "name": "max_detrainment", "description": " The Maximum allowable detrainment velocity (m/s). Default is max_detrainment=1.0e-3 "}, {"units": null, "default": "9.0", "type_": "real", "name": "minstep", "description": " Minimum step size (in seconds) for a blob. Default is minstep=9.0 "}, {"units": null, "default": ".true.", "type_": "logical", "name": "accept_free_blobs", "description": null}, {"units": null, "default": "'BS_RK3(2)'", "type_": "character(len=10)", "name": "update_method", "description": null}, {"units": null, "default": "50.0", "type_": "real", "name": "first_step", "description": null}, {"units": null, "default": "3.0e-3", "type_": "real", "name": "drag", "description": " Coefficient of drag used for bottom stress drag. Corresponds to Cd in Price and Baringer (1994). Dimensionless. Default is drag=3.0e-3 "}, {"units": null, "default": "1", "type_": "integer", "name": "min_do_levels", "description": " Minimum number of deep ocean levels for overflows to be considered.  That is, how many k levels lower should the deep ocean water column be than the shelf/shallow ocean column.  Value must be greater than 0. Default is min_do_levels=1 "}, {"units": null, "default": "0.3333", "type_": "real", "name": "blob_overflow_delta", "description": " Fraction of a grid cell participating in an overflow event. Corresponds to delta in Campin and Goosse (1999).  Dimensionless. Default is blob_overflow_mu=1.0e-4 "}, {"units": null, "default": ".false.", "type_": "logical", "name": "no_rotation", "description": " Sets the coriolis parameter to zero regardless of latitude Default is no_rotation=.false. "}, {"units": null, "default": "10.0", "type_": "real", "name": "large_speed", "description": " A value for error checking.  If the speed of a blob exceeds large_speed in any of x,y,z then a warning flag is raised. Default is large_speed=10.0 "}, {"units": null, "default": "1.0e-4", "type_": "real", "name": "blob_overflow_mu", "description": " Frictional dissipation rate used for calculating initial properties of bottom blobs.  Corresponds to mu in Campin and Goosse (1999).  Units are 1/s. Default is blob_overflow_mu=1.0e-4 "}, {"units": null, "default": "0.01", "type_": "real", "name": "rho_threshold", "description": " The density difference required before a blob is formed.  rho_threshold must be greater than zero. Default is rho_threshold=0.01 "}, {"units": null, "default": ".false.", "type_": "logical", "name": "enforce_big_blobs", "description": null}], "filename": "src/mom5/ocean_blobs/ocean_blob_dynamic_bottom.F90"}, {"namelist": "ocean_blob_dynamic_free_nml", "items": [{"units": null, "default": "0.8", "type_": "real", "name": "safety_factor", "description": " Safety factor for the RK scheme (dimensionless). A smaller number should reduce the number of rejected steps, but, decreases the locally extrapolated step.  Corresponds to varrho in the notes. Must be 0<safety_factor<=1.0 Default is safety_factor=0.8 "}, {"units": null, "default": "5.e-8", "type_": "real", "name": "det_param", "description": " The detrainment parameter (kg m^2/s). Corresponds to Gamma in the notes. Default is det_param=5.0e-8 "}, {"units": null, "default": ".true.", "type_": "logical", "name": "full_N2", "description": " Whether to use the buoyancy frequency calculated from the combined E and L system (true) or, from the E system only (false). Default is full_N2=.true. "}, {"units": null, "default": "50.0", "type_": "real", "name": "first_step", "description": null}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_this_module", "description": " Must be true to use this module. Default is use_this_module=.false. "}, {"units": null, "default": "1.e-3", "type_": "real", "name": "max_detrainment", "description": " The Maximum allowable detrainment velocity (m/s). Default is max_detrainment=1.0e-3 "}, {"units": null, "default": "9.0", "type_": "real", "name": "minstep", "description": " Minimum step size (in seconds) for a blob. Default is minstep=9.0 "}, {"units": null, "default": "'CK_RK5(4)'", "type_": "character(len=10)", "name": "update_method", "description": " Decide which method to use to integrate the blobs.  Choices are 'BS_RK3(2)' or 'CK_RK5(4)' for the Bogaki-Shampine or Cash-Karp methods respectively. Default is update_method='CK_RK5(4) "}, {"units": null, "default": "-1.e-15", "type_": "real", "name": "bv_freq_threshold", "description": " The buoyancy frequency threshold at which the scheme will start to create blobs, i.e. blobs will be formed when N^2<bv_freq_threshold Default is bv_freq_threshold=-1.0e-15 "}, {"units": null, "default": "1.0e-5", "type_": "real", "name": "rayleigh_drag_new", "description": " Rayleigh drag coefficient (1/s) for new blobs that are formed due to the vertical instability criterion.  Corresponds to alpha in the notes. Default is rayleigh_drag_new=1.0e-5 "}, {"units": null, "default": "1.0e-7", "type_": "real", "name": "rayleigh_drag_bot", "description": " Rayleigh drag coefficient (1/s) for bottom blobs that become free blobs.  Corresponds to alpha in the notes. Default is rayleigh_drag_bot=1.0e-7 "}, {"units": null, "default": "1.0", "type_": "real", "name": "size_fact", "description": " An Adjustment for blob size, 0<size_fact<=1.0 Corresponds to Lambda in the notes. Default is size_fact=1.0 "}, {"units": null, "default": "10.0", "type_": "real", "name": "large_speed", "description": " A value for error checking.  If the speed of a blob exceeds large_speed in any of x,y,z then a warning flag is raised. Default is large_speed=10.0 "}, {"units": null, "default": "0.01", "type_": "real", "name": "rel_error", "description": " Relative error for the RK scheme (dimensionless). A smaller number is more accurate, but, is more computationally expensive. Corresponds to zeta* in the notes. Must be 0<rel_error<=1.0 Default is rel_error=0.01 "}], "filename": "src/mom5/ocean_blobs/ocean_blob_dynamic_free.F90"}, {"namelist": "ocean_blob_static_bottom_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "overflow_one_return", "description": " Creates a single return blob when .true.  Cannot be .true. when overflow_no_return is also .true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_this_module", "description": null}, {"units": null, "default": ".false.", "type_": "logical", "name": "overflow_no_return", "description": " When .false. creates return blobs to replicate the original Campin and Goosse scheme.  When .true. only creates blobs that sink.  See further overflow_one_return "}, {"units": null, "default": "0.3333", "type_": "real", "name": "blob_overflow_delta", "description": " Fraction of grid cell participating in overflow Valid values are 0<=delta<=1 Default is blob_overflow_delta=1/3 "}, {"units": "m/s", "default": "0.01", "type_": "real", "name": "blob_overflow_umax", "description": " Maximum downslope speed allowed for overflow Default is blob_overflow_umax=0.01 "}, {"units": "1/s", "default": "1.0e-4", "type_": "real", "name": "blob_overflow_mu", "description": " Frictional dissipation used in blob_overflow scheme Default is blob_overflow_mu=1.0e-4 "}], "filename": "src/mom5/ocean_blobs/ocean_blob_static_bottom.F90"}, {"namelist": "ocean_blob_static_free_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "use_this_module", "description": null}, {"units": null, "default": ".false.", "type_": "logical", "name": "blob_ncon_like", "description": " If true, will use NCon-like formulation. Default blob_ncon_like = .true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "blob_diff_like", "description": " If true, will use the diffusion-like formulation. Default is \"blob_diff_like=.false. "}, {"units": null, "default": "7", "type_": "integer", "name": "ncon_blob", "description": " The number of times that the water column is checked and adjusted for instability. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "blob_swap_like", "description": " If true, will use the swap-like formulation. Default is blob_switch_like=.false. "}], "filename": "src/mom5/ocean_blobs/ocean_blob_static_free.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_blobs/ocean_blob_util.F90"}, {"namelist": "ocean_advection_velocity_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "read_advection_velocity", "description": " For reading in a file with specified zonal, meridional, and vertical components to the advective velocity. The file should have velocity at the east face of T-cell, north face, and bottom, just as on a C-grid.  The units should be m/s for each component.  MOM then multiplies but the appropriate thickness and density factors to generate transport for use in the model. Default read_advection_velocity=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "constant_advection_velocity", "description": " When reading in the advection velocity components, we may choose to keep them constant in time.  This facilitates idealized tests of tracer advection. Default constant_advection_velocity=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "read_advection_transport", "description": " For reading in a file with specified zonal, meridional, and vertical components to the advection transport. The file should have transport at the east face of T-cell, north face, and bottom, just as on a C-grid.  The units should be (kg/m^3)*(m^2/sec) for horz components, and (kg/m^3)*(m/sec) for vertical component.  MOM then uses these fields directly to initialize uhrho_et, vhrho_nt, and wrho_bt. Default read_advection_transport=.false. "}, {"units": "meter/sec", "default": "-1.0", "type_": "real", "name": "max_advection_velocity", "description": " This is a check value used to determine if the time steps will result in linearly stable advection.  If set to a number < 0, then model will estimate the value as a function of maximum grid size. Note that this time step check is not rigorous, and it depends on the details of the advection scheme.  Nonetheless, it provides some useful warning for setting the time steps in the model. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "inflow_nboundary", "description": " For adding an inflow velocity from the northern boundary. Default is inflow_nboundary=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging. "}], "filename": "src/mom5/ocean_core/ocean_advection_velocity.F90"}, {"namelist": "ocean_barotropic_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "zero_nonlinear_forcing_bt", "description": " Will set to zero the nonlinear forcing terms, leaving only the smf and bmf terms to force the barotropic velocity. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_eta_tendency", "description": " To maintain deta_dt at zero.  For debugging. Default zero_eta_t=.false. "}, {"units": null, "default": "-1", "type_": "integer", "name": "diag_step", "description": " Frequency for output of ascii barotropic diagnostics. Setting diag_step=1 will compute diagnostics each time step and print to stdout.  This setting is useful when developing a model in order to examine various budgets and stability issues. But when running production, one should set diag_step to a mucch larger number in order to reduce i/o and model cost.  Default diag_step=-1, which means will not compute any of the online diagnostics. "}, {"units": "m/sec", "default": ".01", "type_": "real", "name": "vel_micom_bih", "description": " Velocity scale that is used for computing the MICOM biharmonic mixing coefficient used in the biharmonic smoothing of surface height or anomalous bottom pressure. Default vel_micom_bih=0.01. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "smooth_pbot_t_biharmonic_legacy", "description": " For using an older version of the smooth_pbot_t_biharmonic scheme.  The smooth_pbot_t_biharmonic_legacy option has a minor bug, but it is maintained in order to allow for backward compatible legacy simulations.  It is not recommended for new simulations. To use it requires also setting smooth_pbot_t_biharmonic=.true. Default smooth_pbot_t_biharmonic_legacy=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "do_bitwise_exact_sum", "description": " Set true to do bitwise exact global sum. When it is false, the global sum will be non-bitwise_exact, but will significantly increase efficiency. Default do_bitwise_exact_sum=.false. "}, {"units": "m/sec", "default": ".05", "type_": "real", "name": "udrho_lap_vel_micom", "description": " Velocity scale that is used for computing the MICOM Laplacian mixing coefficient used in the Laplacian smoothing of udrho. This options will soon be removed from MOM. Default udrho_lap_vel_micom=.05 "}, {"units": null, "default": ".false.", "type_": "logical", "name": "smooth_eta_t_bt_laplacian", "description": " For spatially smoothing the eta_t field at each barotropic time step using a Laplacian operator.  This option may not be necessary when pred_corr_gamma > 0.0, since the predictor-corrector approach has dissipation from pred_corr_gamma > 0.0.  Also, smoothing is not needed in general for Cgrid MOM, since the gravity wave null mode only appears for the Bgrid.  This option is only applicable for DEPTH_BASED vertical coordinates. Default smooth_eta_t_bt_laplacian=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "udrho_bih", "description": " The vertically integrated horizontal momentum on the Bgrid can be noisy. It is therefore sometimes useful to add a smoothing operator.  Here, we apply the biharmonic friction as coded in the friction module using the vertically averaged isotropic viscosity as well as a background. Do so just on the baroclinic time step, so the option is less expensive than udrho_bt_lap. This options will soon be removed from MOM. Default udrho_bih=.false. "}, {"units": "m/sec", "default": ".05", "type_": "real", "name": "vel_micom_lap", "description": " Velocity scale that is used for computing the MICOM Laplacian mixing coefficient used in the Laplacian smoothing of surface height or anomalous bottom pressure.  Default vel_micom_lap=0.05. "}, {"units": "metre", "default": "5.0", "type_": "real", "name": "ideal_initial_eta_amplitude", "description": " Amplitude for initializing eta with an ideal profile. Default ideal_initial_eta_amplitude = 5.0 "}, {"units": "dimensionless", "default": ".20", "type_": "real", "name": "frac_crit_cell_height", "description": " When use GEOPOTENTIAL vertical coordinate, the top model tracer grid cell has thickness dzt(i,j,1) = dzt(1) + eta_t(i,j). 0 < frac_crit_cell_height <= 1 sets the fraction of dzt(1) that is allowed prior to bringing the model down due to overly small dzt(i,j,1). Default frac_crit_cell_height=0.20. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "smooth_anompb_bt_biharmonic", "description": " For spatially smoothing the anomalous pbot_t field at each barotropic time step using a biharmonic operator. May not be necessary when when pred_corr_gamma > 0.0, since predictor-corrector has dissipation from pred_corr_gamma > 0.0. This option is applicable just for PRESSURE_BASED vertical coordinates. Also, smoothing is not needed in general for Cgrid MOM, since the gravity wave null mode only appears for the Bgrid. WARNING: This operator is NOT positive definite, and so can produce spurious extrema. It is not recommended just for this reason. Default smooth_anompb_bt_biharmonic=.false. "}, {"units": "meter", "default": "5.0", "type_": "real", "name": "eta_max", "description": " The maximum positive eta_t allowed when truncate_eta is true. Default eta_max = 5.0. "}, {"units": null, "default": "1", "type_": "integer", "name": "barotropic_halo", "description": " Set barotropic_halo > 1 to use wide halo in the barotropic time step to improve the performance. In barotropic time step, most time is spent on mpp_update_domains. Use wide halo to decrease the number of mpp_update_domain calls and hence improve the performance. The default value is barotropic_halo=1, which is the older approach (non-wide halo).  Users are encouraged to experiment with larger halos, as the model speedup can be tremendous. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_tendency", "description": " If true, will not integrate the barotropic fields. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "smooth_eta_diag_biharmonic", "description": " For spatially smoothing the diagnosed eta_t field using a biharmonic operator.  This option is used for PRESSURE_BASED vertical coordinates, in which case the free surface is diagnosed rather than prognosed. Also, smoothing is not needed in general for Cgrid MOM, since the gravity wave null mode only appears for the Bgrid. Default smooth_eta_diag_biharmonic=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "geoid_forcing", "description": " For modifying the geoid, implemented as a time independent tidal forcing. Need to read in a file to obtain the offset geoid profile. Default geoid_forcing=.false. "}, {"units": "metre", "default": "100e3", "type_": "real", "name": "ideal_initial_eta_ywidth", "description": " Width in y-direction for sine-wave profile. Default ywidth=100e3 "}, {"units": null, "default": ".false.", "type_": "logical", "name": "tidal_forcing_8", "description": " Forces from 8 lunar and solar tidal constituents. Default tidal_forcing_8=.false. "}, {"units": "metre", "default": "1e-12", "type_": "real", "name": "eta_offset", "description": " Uniform offset for use in determining the filter acting on tracer when smoothing the surface height. Default eta_offset=1e-12. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_forcing_bt", "description": " Will set to zero all of the terms forcing the barotropic velocity. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "tidal_forcing_m2", "description": " Forces from lunar M2 tidal constituent. Default tidal_forcing_m2=.false. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "verbose_truncate", "description": " For verbose printout on truncate_eta "}, {"units": "m/sec", "default": ".1", "type_": "real", "name": "vel_micom_bih_diag", "description": " Velocity scale that is used for computing the MICOM biharmonic mixing coefficient used in the biharmonic smoothing of diagnosed surface height. Default vel_micom_bih_diag=0.1. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "initsum_with_bar_mom4p1", "description": null}, {"units": null, "default": ".false.", "type_": "logical", "name": "initsum_with_bar_mom4p0", "description": null}, {"units": null, "default": ".true.", "type_": "logical", "name": "smooth_eta_diag_laplacian", "description": " For spatially smoothing the diagnosed eta_t field using a laplacian operator. This option is used for PRESSURE_BASED vertical coordinates, in which case the free surface is diagnosed rather than prognosed. Also, smoothing is not needed in general for Cgrid MOM, since the gravity wave null mode only appears for the Bgrid. Default smooth_eta_diag_laplacian=.true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "ideal_initial_eta", "description": " To initialize eta_t to an ideal profile.  This option overrides all other initialization that may have occurred. Default=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "udrho_bt_bih", "description": " The vertically integrated horizontal momentum on the Bgrid can be noisy. It is therefore sometimes useful to add a smoothing operator.  Here, we apply the biharmonic friction as coded in the friction module using the vertically averaged isotropic viscosity as well as a  background. Do so on each barotropic time step, which makes it an expensive option. This option is rarely used GFDL. Default udrho_bt_bih=.false. This options will soon be removed from MOM. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "barotropic_time_stepping_B", "description": " Use the alternative approach in which we assume the barotropic scheme is a predictor-corrector, which is now the default in MOM.  We use this assumption so that the eta_t and pbot_t fields are updated with a time average. This approach is used for open boundary condition applications. Default barotropic_time_stepping_B=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "smooth_eta_t_bt_biharmonic", "description": " For spatially smoothing the eta_t field at each barotropic time step using a biharmonic operator. May not be necessary when pred_corr_gamma > 0.0, since predictor-corrector has dissipation from pred_corr_gamma > 0.0. Also, smoothing is not needed in general for Cgrid MOM, since the gravity wave null mode only appears for the Bgrid. Applicable just for DEPTH_BASED vertical coordinates. WARNING: this operator is NOT positive definite, and so can produce spurious extrema.  It is not generally recommended just for this reason. Default smooth_eta_t_bt_laplacian=.false. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "write_a_restart", "description": " Set true to write a restart.  False setting only for rare cases where wish to benchmark model without measuring the cost of writing restarts and associated chksums. Default is write_a_restart=.true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_eta_ic", "description": " To initialize eta_t to zero. "}, {"units": "m/sec", "default": ".2", "type_": "real", "name": "vel_micom_lap_diag", "description": " Velocity scale that is used for computing the MICOM Laplacian mixing coefficient used in the Laplacian smoothing of diagnosed surface height. Default vel_micom_lap_diag=0.2. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_coriolis_bt", "description": " Will set to zero the Coriolis parameter for purpooses of computing the barotropic momentum equation. This option is for testing alone. Default zero_coriolis_bt = .false. "}, {"units": "m/sec", "default": ".01", "type_": "real", "name": "udrho_bih_vel_micom", "description": " Velocity scale that is used for computing the MICOM biharmonic mixing coefficient used in the biharmonic smoothing of udrho. This options will soon be removed from MOM. Default udrho_bih_vel_micom=.01 "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " Print out lots of diagnostics of use for debugging. Default debug_this_module=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "udrho_lap", "description": " The vertically integrated horizontal momentum on the Bgrid can be noisy. It is therefore sometimes useful to add a smoothing operator.  Here, we apply the laplacian friction as coded in the friction module using the vertically averaged isotropic viscosity as well as a background. Do so just on the baroclinic time step, so the option is less expensive than udrho_bt_lap. This options will soon be removed from MOM. Default udrho_lap=.false. "}, {"units": "metre", "default": "100e3", "type_": "real", "name": "ideal_initial_eta_xwidth", "description": " Width in x-direction for sine-wave profile. Default xwidth=100e3 "}, {"units": null, "default": ".false.", "type_": "logical", "name": "smooth_anompb_bt_laplacian", "description": " For spatially smoothing anomalous pbot_t at each barotropic time step using a Laplacian operator.  May not be necessary when pred_corr_gamma > 0.0, since predictor-corrector has dissipation from pred_corr_gamma > 0.0.  This option is applicable just for PRESSURE_BASED vertical coordinates. Also, smoothing is not needed in general for Cgrid MOM, since the gravity wave null mode only appears for the Bgrid. Default smooth_anompb_bt_laplacian=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_eta_t", "description": " To maintain eta_t at zero, but to allow other fields to evolve. For debugging.  Default zero_eta_t=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_eta_u", "description": " To maintain eta_u at zero, but to allow other fields to evolve. For debugging.  Default zero_eta_u=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "truncate_eta", "description": " To truncate the surface height so to ensure positive thickness within the top cell. This method will not conserve volume or tracer. It is coded for cases when conservation is not critical but wish to run GEOPOTENTIAL models w/ large free surface height deviations, such as when running with tides and very fine vertical resolution. The preferred approach is to use zstar or pstart vertical coordinates. Default truncate_eta = .false.. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "smooth_eta_t_biharmonic", "description": " For spatially smoothing the eta_t field on the big time step by using a biharmonic operator. For compatibility and global conservation, must also introduce a mixing to the thickness weighted tracer concentration in the k=1 cell. Applicable just for DEPTH_BASED vertical coordinates. Also, smoothing is not needed in general for Cgrid MOM, since the gravity wave null mode only appears for the Bgrid. WARNING: This operator is NOT positive definite, and so can produce spurious extrema.  It is not recommended just for this reason. Default smooth_eta_t_biharmonic=.false. "}, {"units": "dimensionless", "default": "0.948", "type_": "real", "name": "alphat", "description": " Dimensionless self-attraction and loading term.  Used only when tidal_forcing=.true. Default alphat=0.948. "}, {"units": "dimensionless", "default": "0.2", "type_": "real", "name": "pred_corr_gamma", "description": " Dimensionless dissipation parameter for the preditor-corrector scheme.  Setting pred_corr_gamma=0.0 reduces the scheme to a forward-backward, but it has been found to be unstable. So pred_corr_gamma > 0.0 is recommended.  Note that pred_corr_gamma > 0.25 may be over-dissipated and so may go unstable. Default pred_corr_gamma=0.2. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "tidal_forcing_ideal", "description": " For ideal tidal forcing, which has a bump configuration. Default tidal_forcing_ideal=.false. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "verbose_init", "description": " For brief or full printout on initialization Default verbose_init=.true. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "smooth_pbot_t_laplacian", "description": " For spatially smoothing pbot_t-pbot0 on the big time step using a laplacian operator. For compatibility and global conservation, must also introduce a mixing to the thickness weighted tracer concentration in the k=kbot cell. Applicable just for PRESSURE_BASED vertical coordinates. Also, smoothing is not needed in general for Cgrid MOM, since the gravity wave null mode only appears for the Bgrid. Default smooth_pbot_t_laplacian=.true. "}, {"units": "Pa", "default": "1e-12", "type_": "real", "name": "pbot_offset", "description": " Uniform offset for use in determining the filter acting on tracer when smoothing the bottom pressure anomaly. Default pbot_offset=1e-12. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "use_legacy_barotropic_halos", "description": null}, {"units": null, "default": ".true.", "type_": "logical", "name": "smooth_eta_t_laplacian", "description": " For spatially smoothing the eta_t field on the big time step by using a laplacian operator. For compatibility and global conservation, must also introduce a mixing to the thickness weighted tracer concentration in the k=1 cell. Applicable just for DEPTH_BASED vertical coordinates. Also, smoothing is not needed in general for Cgrid MOM, since the gravity wave null mode only appears for the Bgrid. Default mooth_eta_t_laplacian=.true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "udrho_bt_lap", "description": " The vertically integrated horizontal momentum can be noisy on the Bgrid. It is therefore sometimes useful to add a smoothing operator to the barotropic time stepping. Here, we apply the laplacian friction as coded in the friction module using the vertically averaged isotropic viscosity as well as a background, and we do so on each barotropic time step.  It is an expensive option.  It is an option rarely used GFDL. This options will soon be removed from MOM. Default udrho_bt_lap=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "barotropic_time_stepping_A", "description": " Use the general approach from MOM4.0, in which the eta_t and pbot_t fields are updated with a big time step. This is the recommended approach for most applications that do not employ and open boundary condition. Default barotropic_time_stepping_A=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "smooth_pbot_t_biharmonic", "description": " For spatially smoothing pbot_t-pbot0 on the big time step by using a biharmonic operator. For compatibility and global conservation, must also introduce a mixing to the thickness weighted tracer concentration in the k=kbot cell. Applicable just for PRESSURE_BASED vertical coordinates. Also, smoothing is not needed in general for Cgrid MOM, since the gravity wave null mode only appears for the Bgrid. WARNING: This operator is NOT positive definite, and so can produce spurious extrema.  It is not recommended just for this reason. Default smooth_pbot_t_biharmonic=.false. "}], "filename": "src/mom5/ocean_core/ocean_barotropic.F90"}, {"namelist": "ocean_bbc_nml", "items": [{"units": null, "default": "3.0e-3", "type_": "real", "name": "cdbot_hi", "description": null}, {"units": "m", "default": "1100.0", "type_": "real", "name": "cdbot_HH", "description": " H0 in a parameterization of cdbot_roughness_uamp. Default is cdbot_HH=1100.0. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "cdbot_roughness_length", "description": " For determining bottom drag coefficient using a map of the roughness length. This approach is more relevant for coarse models than the constant roughness length used in the cdbot_law_of_wall option. Default is cdbot_roughness_length=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging purposes. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "cdbot_roughness_uamp", "description": " For determining bottom drag coefficient using a map of the roughness length and tidal velocity amplitude. This approach is more relevant for coarse models than the constant roughness length used in the cdbot_law_of_wall option. cdbot_lo <= cdbot(i,j) <= cdbot_hi. Default is cdbot_roughness_length=.false. "}, {"units": null, "default": "1.0e-3", "type_": "real", "name": "cdbot_lo", "description": null}, {"units": "m/s", "default": "1.0", "type_": "real", "name": "cdbot_UU", "description": " U0 in a parameterization of cdbot_roughness_uamp. Default is cdbot_UU=1.0. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "bmf_implicit", "description": " For incorporating the bottom momentum drag implicitly in time. Default is bmf_implicit=.false. "}, {"units": "dimensionless", "default": "2.5e-3", "type_": "real", "name": "cdbot", "description": " Dimensionless coefficient for quadratic bottom drag. "}, {"units": "m/s", "default": "10.0", "type_": "real", "name": "uvmag_max", "description": " Maximum magnitude of the bottom velocity used to compute the bottom momentum drag.  Default is uvmag_max=10.0. "}, {"units": null, "default": "40.0", "type_": "real", "name": "cdbot_gamma", "description": null}, {"units": "N/m2", "default": "1.0", "type_": "real", "name": "bmf_max", "description": " Maximum magnitude of the bottom momentum drag. Default is bmf_max=1.0. "}, {"units": "metre", "default": "0.01", "type_": "real", "name": "law_of_wall_rough_length", "description": " Bottom roughness length.  Default is law_of_wall_rough_length=0.01m, following the default used in the Princeton Ocean Model (POM). This value corresponds to \"Law of Wall\" physics. "}, {"units": "m/s", "default": ".05", "type_": "real", "name": "uresidual", "description": " Residual bottom velocity due to unresolved fluctuations (e.g., waves and tides) that contribute to bottom dissipation.  Should be set to zero when running with explicit representation of tidal forcing and when waves are well resolved. Default is uresidual=.05. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "cdbot_wave", "description": " For determining bottom drag coefficient using a map of the roughness length and the surface wind wave field. The modified drag coefficient is calculated following Grant and Mattsen. Likewise this method can be improved using more sophisticated wave models including swell. Default is cdbot_wave=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "cdbot_law_of_wall", "description": " For determining bottom drag coefficient using a constant roughness length. Will take maximum between cdbot and the computed value using law of wall log-profile.  This option of use when have very very refined vertical resolution (say on order of meters) near the bottom. Terrain following coordinates should use this option since they generally have very refined vertical grid spacing on topography. Default is cdbot_law_of_wall=.false. "}, {"units": null, "default": ".001", "type_": "real", "name": "convert_geothermal", "description": null}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_geothermal_heating", "description": null}], "filename": "src/mom5/ocean_core/ocean_bbc.F90"}, {"namelist": "ocean_coriolis_nml", "items": [{"units": null, "default": ".true.", "type_": "logical", "name": "use_this_module", "description": " Must be true to add contributions from Coriolis force. "}, {"units": null, "default": ".FALSE.", "type_": "logical", "name": "debug_this_module", "description": " For debugging. "}, {"units": null, "default": "0.5", "type_": "real", "name": "acor", "description": " acor=0.0 means explicit Coriolis force.  0.5 < = acor < 1.0 means semi-implicit, and acor = 1.0 is implicit.  This option is only relevant for the Bgrid, since the C-grid compute Coriolis using 3rd order Adams-Bashforth scheme. For the Bgrid, the semi-implicit method removes dtuv time step constraint associated with inertial oscillations, but it leads to Coriolis force affecting energy balances. If use two-level tendency discretization, then acor=0 is NOT allowed since the model will be linearly unstable with growth rate going as f*(delta time). "}], "filename": "src/mom5/ocean_core/ocean_coriolis.F90"}, {"namelist": "ocean_density_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "smax_min_in_column", "description": " To compute the diagnostic maximum neutral slope within a column as the minimum vertical to horizontal grid aspect ratio.  This method ensures that the slope is adequately \"resolved\" by the grid, and that all depths use the same definition of \"resolved\", even if presumably thicker grid cells can \"resolve\" larger neutral slopes.  This approach is not very useful generally, so it is retained only for testing purposes. Default smax_min_in_column=.false. "}, {"units": "dimensionless", "default": "10.0", "type_": "real", "name": "grad_nrho_lrpotrho_max", "description": " Maximum value used for grad_nrho_lrpotrho. Default grad_nrho_lrpotrho_max=10. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "do_bitwise_exact_sum", "description": " Set true to do bitwise exact global sum. When it is false, the global sum will be non-bitwise_exact, but will significantly increase efficiency. default: do_bitwise_exact_sum=.false. "}, {"units": "psu or g/kg", "default": "20.0", "type_": "real", "name": "s_test", "description": " Salinity for testing the EOS. "}, {"units": "dbar", "default": "1000.0", "type_": "real", "name": "p_test", "description": " Sea pressure for testing the EOS. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "density_equal_potrho", "description": " For idealized tests, set the in situ density equal to the potential density referenced to potrho_press.  All density derivatives will also be computed with respect to constant potrho_press pressure. Default density_equal_potrho=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "mask_domain_restart", "description": " For cases where use the domain masking, it is necessary to initialize the field denominator_r to nonzero in order to avoid NaNs in the case when change processor layout in between restarts.  Note that when use solid wall boundary conditions, this logical should remain false in order to bitwise reproduce across restarts. Default mask_domain_restart=.false. "}, {"units": "C", "default": "-2.0", "type_": "real", "name": "theta_min", "description": " Minimum conservative temperature or potential temperature used to partition vertical according to temperature. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "smooth_stratification_factor", "description": " For doing an S2D smoothing of the stratification factor used for diagnostic purposes.  Requires an extra call to mpp update. Default smooth_stratification_factor=.false. since the smoothing incurs a cost that should be borne only when desired. "}, {"units": "kg/m^3", "default": "1020.0", "type_": "real", "name": "neutralrho_min", "description": " Minimum neutral density used to partition vertical according to rational polynomial approximation to neutral density. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "rho0_density", "description": " For debugging, it is often useful to have rho=rho0 uniform. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "drhodz_diag_stable", "description": " When computing drhodz_diag, we can enforce that it is negative, thus reflecting a stable stratification.  The field drhodz_diag is used for many water mass transformation diagnostics, such as wdian_rho.  Allowing for unstable profiles can bias the wdian_rho calculation in an improper way, since the magnitude of drhodz_diag is very small when it is positive, whereas it is larger magnitude when negative.  Default drhodz_diag_stable=.true. "}, {"units": "dbar", "default": "0.0", "type_": "real", "name": "press_standard", "description": " Standard atmospheric pressure (dbar).  The realistic EOS used in MOM requires \"sea pressure\" as an argument rather than absolute pressure.  Sea pressure is absolute pressure minus a standard atmospheric pressure of 10.1325dbar.  For models that do have a realistic atmospheric loading, then it is appropriate to remove 10.1325dbar prior to computing the EOS. For those cases with zero atmospheric pressure, then it is not necessary to remove the standard atmosphere.  The default for the press_standard is 0.0dbar. "}, {"units": null, "default": "80", "type_": "integer", "name": "layer_nk", "description": " Number of classes used to partition vertical according to potential density, conservative temperature, or potential temperature. Used for diagnostics. "}, {"units": "dimensionless", "default": "1.0", "type_": "real", "name": "grad_nrho_lrpotrho_min", "description": " Minimum value used for grad_nrho_lrpotrho. Default grad_nrho_lrpotrho_min=1. "}, {"units": "dimensionless", "default": "-1.0", "type_": "real", "name": "smax_diag", "description": " A diagnostic maximum neutral slope for use in computing which direction is deemed the most stratified.  For use in computing the stratification_factor which is then used to diagnose the dianeutral mass transport. smax_diag should corresond to the choice used in neutral diffusion scheme. Should have 0 <= smax_diag <= 1.0. Default smax_diag=-1.0, in which case we compute the smax according to the vertical to horizontal grid aspect ratio.  This method ensures that the slope is adequately \"resolved\" by the grid. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "eos_linear", "description": " Set to true to use an idealized linear equation of state, which has no pressure dependence, and is a linear function of salinity and temperature. Default eos_linear=.false. "}, {"units": "kg/m4", "default": "1.e-10", "type_": "real", "name": "epsln_drhodz_diag", "description": " To normalize the inverse vertical derivative of neutral density for computing neutral_rho and wdian diagnostics. Default epsln_drhodz_diag=1e-10. "}, {"units": "kg/m4", "default": "1.e-10", "type_": "real", "name": "epsln_drhodz", "description": " To normalize the inverse vertical derivative of neutral density for computing the buoyancy frequency. Default epsln_drhodz=1e-10. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "neutral_density_potrho", "description": " Set to true to compute the neutral density as just a selected potential density, set according to potrho_press. Since the neutral_density_omega approach has yet to be coded, we only have the neutral_density_potrho option to choose from at this time. Default neutral_density_potrho=.true. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "write_a_restart", "description": " Set true to write a restart.  False setting only for rare cases where wish to benchmark model without measuring the cost of writing restarts and associated chksums. Default is write_a_restart=.true. "}, {"units": null, "default": "0.0", "type_": "real", "name": "beta_linear_eos", "description": " Constant \"saline contraction coefficient\" for linear EOS rho = rho0 - alpha_linear_eos*theta + beta_linear_eos*salinity "}, {"units": "C", "default": "20.0", "type_": "real", "name": "tn_test", "description": " Conservative temperature or potential temperature for testing the equation for neutral density. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "eos_preteos10", "description": " Set to true to use pre-TEOS-10 equation of state, which is a function of potential temperature and practical salinity, or conservative temperature and practical salinity. Default eos_preteos10=.false. "}, {"units": "dbar", "default": "2000.0", "type_": "real", "name": "potrho_press", "description": " Reference sea pressure for computing diagnostic potential density of use for computing diagnostics with potential density. Default potrho_press=2000.0 "}, {"units": "kg/m^3", "default": "1030.0", "type_": "real", "name": "neutralrho_max", "description": " Maximum neutral density used to partition vertical according to rational polynomial approximation to neutral density. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging nonlinear equation of state "}, {"units": "C", "default": "30.0", "type_": "real", "name": "theta_max", "description": " Maximum conservative temperature or potential temperature used to partition vertical according to temperature. "}, {"units": "kg/m^3", "default": "1038.0", "type_": "real", "name": "potrho_max", "description": " Maximum potential density used to partition vertical according to potential density. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "buoyfreq_smooth_vert", "description": " To smooth the vertical temp and salt derivative for diagnosing the buoyancy frequency. Default buoyfreq_smooth_vert=.true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "update_diagnostic_factors", "description": " To update the watermass_factor and stratification_factor for use in the water mass transformation diagnostics. Default update_diagnostic_factors=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "neutral_density_omega", "description": " Set to true to compute the neutral density according to the omega method based on Klocker and McDougall. This approach has not yet been coded. Presently as a placeholder we use potential density referenced to 2000dbar. Default neutral_density_omega=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "grad_nrho_lrpotrho_compute", "description": " To perform the diagnostic calculation of grad_nrho_lrpotrho for analysis diagnostics.  This factor is not well constrained, and can be problematic in certain regions.  So presently we do not recommend computing it, so that the default is grad_nrho_lrpotrho_compute=.false. "}, {"units": null, "default": "0.255", "type_": "real", "name": "alpha_linear_eos", "description": " Constant \"thermal expansion coefficient\" for linear EOS rho = rho0 - alpha_linear_eos*theta + beta_linear_eos*salinity "}, {"units": "kg/m^3", "default": "1028.0", "type_": "real", "name": "potrho_min", "description": " Minimum potential density used to partition vertical according to potential density. "}, {"units": "psu or g/kg", "default": "35.0", "type_": "real", "name": "sn_test", "description": " Salinity the equation for neutral density. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "eos_teos10", "description": " Set to true to use TEOS-10 equation of state, which is a function of conservative temperature and absolute salinity. Default eos_teos10=.false. "}, {"units": "C", "default": "20.0", "type_": "real", "name": "t_test", "description": " Conservative temperature or potential temperature for testing the EOS. "}, {"units": null, "default": "1", "type_": "integer", "name": "num_121_passes", "description": null}], "filename": "src/mom5/ocean_core/ocean_density.F90"}, {"namelist": "ocean_domains_nml", "items": [{"units": "dimensionless", "default": "0", "type_": "integer", "name": "y_cyclic_offset", "description": " offset to be applied on y-direction boundary condition. Its value could be positive or negative and the default value is 0. For torus (cyclic in x and y-direction), at least one of x_cyclic_offset and y_cyclic_offset must be 0. "}, {"units": "dimensionless", "default": "0", "type_": "integer", "name": "x_cyclic_offset", "description": " offset to be applied on x-direction boundary condition. Its value could be positive or negative and the default value is 0. When the y-direction boundary condition is folded-north(tripolar grid), x_cyclic_offset must be 0. For torus (cyclic in x and y-direction), at least one of x_cyclic_offset and y_cyclic_offset must be 0. "}, {"units": "dimensionless", "default": "10", "type_": "integer", "name": "max_tracers", "description": " temporary - need to call domains_init before tracer_init Used for computing mpp_stack_size. "}, {"units": "dimensionless", "default": "1", "type_": "integer", "name": "halo", "description": " For specifying the halo size by hand. "}], "filename": "src/mom5/ocean_core/ocean_domains.F90"}, {"namelist": "ocean_grids_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging. Note that most of the debugging stuff has been removed, but keep flag around in case need in future. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "do_bitwise_exact_sum", "description": " Set true to do bitwise exact global sum. When it is false, the global sum will be non-bitwise_exact, but will significantly increase efficiency. The default value is do_bitwise_exact_sum=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "write_grid", "description": null}, {"units": null, "default": ".false.", "type_": "logical", "name": "read_rho0_profile", "description": " To read in an initial rho0(k) profile to assist in defining the initial settings for the pressure increments dst, for use in setting the pressure-based vertical coordinate grids.  Ideally, this profile is determined by the level averaged density in the initial conditions. Note that it is essential to have rho0_profile have a sensible value at all depths even if there is no water there, since there are places where we divide by rho0_profile in rock.  Also, be mindful that with denser water at depth, the pressure levels will be coarser at depth than if using the trivial density profile rho0(k)=rho0. This option is experimental, so it is recommended that user maintain the default read_rho0_profile=.false. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "verbose_init", "description": " Prints out lots of initial checksums.  Useful to have on, so defaulted to true. "}], "filename": "src/mom5/ocean_core/ocean_grids.F90"}, {"namelist": "ocean_model_nml", "items": [{"units": null, "default": "-1", "type_": "integer", "name": "dt_ocean", "description": " Ocean model time step in seconds. "}, {"units": null, "default": "(/1,1/)", "type_": "integer(2)", "name": "layout", "description": " Processor domain layout for ocean model. "}, {"units": null, "default": "'zstar'", "type_": "character(len=32)", "name": "vertical_coordinate", "description": " This string determines the vertical coordinate used in MOM.  There are 3 + 3 options in MOM: Depth-based Boussinesq are 'geopotential', 'zstar', 'zsigma', Pressure-based non-Boussinesq are 'pressure', 'pstar', and 'psigma'.  The two terrain-following sigma options are not well tested in MOM, whereas the other options are standard.  The recommended Boussinesq vertical coordinate is zstar, and the recommended non-Boussineq coordinate is pstar.  The default is vertical_coordinate='zstar'. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "cmip_units", "description": " For CMIP output, we need to have temperature in deg K and mass transport in kg/s.  The flag cmip_units=.true. will diagnose CMIP5-related fields with the CMIP units for sending to the diagnostic manager. Default cmip_units=.false. "}, {"units": null, "default": "1", "type_": "integer", "name": "baroclinic_split", "description": " baroclinic_split = dtts/dtuv = (tracer time step)/(baroclinic time step) = (ocean model time step)/(baroclinic time step) Transients corrupted if baroclinic_split > 1, so it is recommended to use baroclinic_split=1. "}, {"units": null, "default": "'bgrid'", "type_": "character(len=32)", "name": "horizontal_grid", "description": " This string determines the arrangement of variables on the discrete horizontal grid. The standard case is horizontal_grid='bgrid'. However, the C-grid is being developed in MOM.  It is not yet supported for general use. Default horizontal_grid='bgrid'. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "impose_init_from_restart", "description": " Consider the following situation:  We have run the model for many years and generated restarts. Time%init is then .false.  Then, we wish to start a series of perturbation experiments from this restart file.  The generic situation is for Time%init to then be .true. However, we need it to be .false. in MOM in order to have a proper reading of the full restart information. Setting impose_init_from_restart=.true. will facilitate this setup.  The default is impose_init_from_restart=.false., in which case the model will run through its normal start/stop segments using restarts. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug", "description": " For overall model debugging. Set true to print cksums at each timestep for debugging purposes. "}, {"units": null, "default": "'twolevel'", "type_": "character(len=32)", "name": "time_tendency", "description": "  Possible time stepping schemes are the following.  1. \"threelevel\" has the following characteristics  leap-frog for the time tendency which means the inviscid/nondissipative processes are at time tau.  forward for lateral mixing processes (dissipation at taum1)  implicit for vertical dissipative (with aidif = 1.0)  semi-implicit for Coriolis (with acor>0)  Because of the need to apply time filters to suppress leap-frog splitting, the threelevel time stepping scheme does not conserve total tracer content in the model.  2. \"twolevel\" has the following characteristics:  staggered 2nd order forward time tendency, which means that tracer advection, lateral tracer and velocity mixing, are at time tau. Pressure gradients are at taup1.  Adams-Bashforth (either 2nd or 3rd order) for velocity advection Third order is default as it is more stable.  implicit vertical mixing (with aidif = 1.0)  semi-implicit for Coriolis (with acor > 0)  This scheme conserves total volume and tracer in the ocean model.  "}, {"units": null, "default": ".false.", "type_": "logical", "name": "reinitialize_thickness", "description": " When initialized with a nontrivial eta field, it is necessary to reinitialize the thickness arrays. "}, {"units": null, "default": "(/0,0/)", "type_": "integer(2)", "name": "io_layout", "description": " Processor IO domain layout for ocean model. The default value is (0,0). If either io_layout(1) or (2) is 0, it will default to the number of processors in the computational layout, except restart file will default to single file if fms_io_nml fileset_write is set to 'single'.  When both entry of io_layout is positive, io_domain will be defined(a pointer in domain2d) and number of distributed files will be layout(1)*layout(2). For example, assume the restart file is ocean_velocity.res.nc and the diagnostics file is ocean_daily.nc, if the layout = (1,2), the restart files will be ocean_velocity.res.nc.0000 and ocean_veloicity.res.nc.0001, the diagnostics files will be ocean_daily.res.nc.0000 and ocean_daily.res.nc.0001. When the io_domain is defined, restart file and diagnostics file name will be controlled by the io_domain (ignoring fms_io_nml fileset_write). "}, {"units": null, "default": "1", "type_": "integer", "name": "surface_height_split", "description": " Ratio surface_height_split = dtts/dteta = (tracer time step)/(surface height time step) = (tracer time step)/(bottom pressure time step) Typically this split is set to unity for models where baroclinic_split=1, but something larger when baroclinic_split is order 10.  dteta is the time step used for update of eta_t or pbot_t. If surface_height_split is not equal to unity, then tracer conservation properties are compromised. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_velocity_override", "description": " For over-riding the velocity field with values from a file.  Note that we need separate files for (u,v) read into ocean_velocity.F90, as well as (udrho,vdrho) read into ocean_barotropic.F90. Default use_velocity_override=.false. "}, {"units": null, "default": "30", "type_": "integer", "name": "barotropic_split", "description": " Ratio barotropic_split = dtuv/dtbt = (baroclinic time step)/(barotropic time step). Must be large enough to resolve the barotropic gravity waves captured by the barotropic part of the model. Barotropic waves are dissipated when this splitting is greater than unity. Model algorithm is not fully implemented when barotropic_split=1, so user beware if wishing to run an unsplit model simulation. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "introduce_blobs", "description": " For the Lagrangian blobs after a model has already been running. Default introduce_blobs=.false. "}, {"units": null, "default": "\"INPUT/ocean_mask_table\"", "type_": "character(len=128)", "name": "mask_table", "description": " A text file to specify n_mask, layout and mask_list.  This table aims to reduce the number of processors that are cycling over pure land regions.  These processors will be masked out of regions that which contain all land points.  The default file name of mask_table is \"INPUT/ocean_mask_table\". Please note that the file name must begin with \"INPUT/\".  The first line of mask_table is the number of region to be masked out. The second line is the layout of the model. User need to set ocean_model_nml variable layout to be the same as the second line of the mask table. The following n_mask line will be the position of the processor to be masked out.  The mask_table could be created by tools check_mask.  For example the mask_table will be as following if n_mask=2, layout=4,6 and the processor (1,2) and (3,6) are to be masked out. 2 4,6 1,2 3,6 "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_blobs", "description": " For using Lagrangian blobs. Default use_blobs=.false. "}], "filename": "src/mom5/ocean_core/ocean_model.F90"}, {"namelist": "ocean_obc_nml", "items": [{"units": null, "default": "0", "type_": "integer", "name": "nobc", "description": " number of open boundary condition. Its value should be less than max_obc. Increase max_obc if needed. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "is", "description": null}, {"units": null, "default": null, "type_": "character(len=256), dimension(max_obc)", "name": "filename_eta", "description": " Filename to read sea level data. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "iers", "description": null}, {"units": null, "default": "0.7", "type_": "real,    dimension(max_obc)", "name": "ctrop_smooth", "description": null}, {"units": null, "default": "1.5", "type_": "real,    dimension(max_obc)", "name": "ctrop_max", "description": " Maximum value to clip diagnosed barotropic phase speed in terms of sqrt(gH). Should be about  1. "}, {"units": null, "default": null, "type_": "character(len=32),  dimension(max_obc,max_prog_tracers)", "name": "fieldname_tracer", "description": " Fieldname of a tracer. "}, {"units": null, "default": "1", "type_": "integer,            dimension(max_obc,max_prog_tracers)", "name": "rel_clin_pnts", "description": " Relax a tracer at a stripe of rel_clin_pnts. Default = 1. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "iere", "description": null}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "ie", "description": null}, {"units": null, "default": "'NOGRAD'", "type_": "character(len=128), dimension(max_obc,max_prog_tracers)", "name": "obc_tra", "description": " Tracers OBC "}, {"units": null, "default": "'NONE'", "type_": "character(len=16),  dimension(max_obc)", "name": "obc_enhance_diff_back", "description": " logical variable that decide whether to enhance mixing at the boundary. Default value is .false. "}, {"units": null, "default": "'NOGRAD'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_nor", "description": " Normal velocity OBC "}, {"units": null, "default": "'NOGRAD'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_mix", "description": " Vertical mixing coefficient OBC "}, {"units": null, "default": "0.1", "type_": "real,    dimension(max_obc)", "name": "ctrop_min", "description": " Minimum value to diagnosed barotropic phase speed in terms of sqrt(gH). Should be about  0.  Default is 0.1. "}, {"units": null, "default": "0.0", "type_": "real,               dimension(max_obc,max_prog_tracers)", "name": "rel_coef_tracer_out", "description": " Relaxation coefficient to be used for outflow situation. Should be smaller then or equal to rel_coef_tracer_in. "}, {"units": null, "default": "1", "type_": "integer,            dimension(max_obc,max_prog_tracers)", "name": "obc_flow_relax", "description": " Integer variable specifying the flow relaxation zone (flow realxation of Martinsen and Engedahl (1987). Default value is 1. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "jere", "description": null}, {"units": null, "default": "0.0", "type_": "real,    dimension(max_obc)", "name": "rel_coef_eta_out", "description": " Relaxation coefficient to be used for outgoing wave situation. Should be smaller then or equal to rel_coef_eta_in. "}, {"units": null, "default": ".FALSE.", "type_": "logical,            dimension(max_obc,max_prog_tracers)", "name": "obc_consider_sources", "description": " Logical variable specifying if source and SGS terms of the normal tracer scheme are valid. Default value is .false.. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "jers", "description": null}, {"units": null, "default": "1", "type_": "integer, dimension(max_obc)", "name": "enh_pnts", "description": " Enhance viscosity and mixing at a stripe of enh_pnts decreasing with the distance from the boundary. Default = 1. "}, {"units": null, "default": ".FALSE.", "type_": "logical", "name": "debug_this_module", "description": " For debugging. "}, {"units": null, "default": "'NOGRAD'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_ud", "description": null}, {"units": null, "default": ".FALSE.", "type_": "logical, dimension(max_obc)", "name": "obc_damp_newton", "description": null}, {"units": null, "default": "''", "type_": "character(len=10), dimension(max_obc)", "name": "direction", "description": " open boundary direction. Each element value should be west, east, south or north. "}, {"units": null, "default": ".FALSE.", "type_": "logical, dimension(max_obc)", "name": "obc_consider_convu", "description": " logical variable that decide whether to account for one component of convu within the boundary. The appropriate behavior depends on the model configuration. Default value is .false. "}, {"units": null, "default": null, "type_": "character(len=32),  dimension(max_obc)", "name": "fieldname_eta", "description": " Fieldname  to read sea level data. "}, {"units": null, "default": ".FALSE.", "type_": "logical, dimension(max_obc)", "name": "obc_adjust_forcing_bt", "description": null}, {"units": null, "default": "'NONE'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_enhance_visc_back", "description": " logical variable that decide whether to enhance viscosity at the boundary. Default value is .false. "}, {"units": null, "default": ".0", "type_": "real,    dimension(max_obc)", "name": "ctrop_inc", "description": " value to be set for barotropic phase speed if incoming waves are diagnosed. (in terms of sqrt(gH)) Should be about 0. Default is 0. "}, {"units": null, "default": null, "type_": "character(len=32),  dimension(max_obc)", "name": "fieldname_ud", "description": null}, {"units": null, "default": "1.0", "type_": "real,    dimension(max_obc)", "name": "enh_fac_d", "description": " Factor applied to enhance mixing at the boundary. Default = 1. "}, {"units": null, "default": "1", "type_": "integer, dimension(max_obc)", "name": "rel_eta_pnts", "description": " Relax sea level at a stripe of rel_eta_pnts. Default = 1. "}, {"units": null, "default": null, "type_": "character(len=256), dimension(max_obc)", "name": "filename_ud", "description": null}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "js", "description": null}, {"units": null, "default": ".FALSE.", "type_": "logical", "name": "debug_phase_speed", "description": " Includes the phase speed into the model output. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "je", "description": null}, {"units": null, "default": ".FALSE.", "type_": "logical,            dimension(max_obc,max_prog_tracers)", "name": "obc_relax_tracer", "description": " logical variable that decide whether relax tracer or not. Default value is .false. "}, {"units": null, "default": ".FALSE.", "type_": "logical, dimension(max_obc)", "name": "obc_vert_advel_t", "description": " logical variable that decide whether to account for vertical advection of tracers at the boundary. The appropriate behavior depends on the model configuration. Default value is .false. (Currently inactive) "}, {"units": null, "default": ".FALSE.", "type_": "logical, dimension(max_obc)", "name": "obc_vert_advel_u", "description": " logical variable that decide whether to account for vertical advection of momentum at the boundary. The appropriate behavior depends on the model configuration. Default value is .false. "}, {"units": null, "default": "0.9", "type_": "real,    dimension(max_obc)", "name": "enh_fac_v", "description": " 'Safety factor' applied to maximum stable viscosity at the boundary. Default = 0.9 "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "jtre", "description": null}, {"units": null, "default": "'NOTHIN'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_eta", "description": " Surface elevation OBC "}, {"units": null, "default": null, "type_": "character(len=*), intent(in)", "name": "name", "description": " type of open bounday. "}, {"units": null, "default": "0.0", "type_": "real,    dimension(max_obc)", "name": "rel_coef_eta_in", "description": " Relaxation coefficient to be used for incoming wave situation. "}, {"units": null, "default": "'NOGRAD'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_tan", "description": " Tangential velocity OBC "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "itrs", "description": null}, {"units": null, "default": "1.", "type_": "real,    dimension(max_obc)", "name": "damp_factor", "description": null}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "jtrs", "description": null}, {"units": null, "default": null, "type_": "character(len=256), dimension(max_obc,max_prog_tracers)", "name": "filename_tracer", "description": " Filename to read a tracer. It is allowed to put all data for a boundary in one file. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "itre", "description": null}, {"units": null, "default": ".FALSE.", "type_": "logical,            dimension(max_obc,max_prog_tracers)", "name": "obc_tracer_no_inflow", "description": " logical variable that decide whether apply orlanski obc on tracer or not. Default value is .false. "}, {"units": null, "default": "0.0", "type_": "real,               dimension(max_obc,max_prog_tracers)", "name": "rel_coef_tracer_in", "description": " Relaxation coefficient to be used for inflow situation. "}], "filename": "src/mom5/ocean_core/ocean_obc.F90"}, {"namelist": "ocean_obc_nml", "items": [{"units": null, "default": "0", "type_": "integer", "name": "nobc", "description": " number of open boundary condition. Its value should be less than max_obc. Increase max_obc if needed. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "is", "description": null}, {"units": null, "default": null, "type_": "character(len=256), dimension(max_obc)", "name": "filename_eta", "description": " Filename to read sea level data. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "iers", "description": null}, {"units": null, "default": "0.7", "type_": "real,    dimension(max_obc)", "name": "ctrop_smooth", "description": null}, {"units": null, "default": "1.5", "type_": "real,    dimension(max_obc)", "name": "ctrop_max", "description": " Maximum value to clip diagnosed barotropic phase speed in terms of sqrt(gH). Should be about  1. "}, {"units": null, "default": null, "type_": "character(len=32),  dimension(max_obc,max_prog_tracers)", "name": "fieldname_tracer", "description": " Fieldname of a tracer. "}, {"units": null, "default": "1", "type_": "integer,            dimension(max_obc,max_prog_tracers)", "name": "rel_clin_pnts", "description": " Relax a tracer at a stripe of rel_clin_pnts. Default = 1. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "iere", "description": null}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "ie", "description": null}, {"units": null, "default": "'NOGRAD'", "type_": "character(len=128), dimension(max_obc,max_prog_tracers)", "name": "obc_tra", "description": " Tracers OBC "}, {"units": null, "default": "'NONE'", "type_": "character(len=16),  dimension(max_obc)", "name": "obc_enhance_diff_back", "description": " logical variable that decide whether to enhance mixing at the boundary. Default value is .false. "}, {"units": null, "default": "'NOGRAD'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_nor", "description": " Normal velocity OBC "}, {"units": null, "default": "'NOGRAD'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_mix", "description": " Vertical mixing coefficient OBC "}, {"units": null, "default": "0.1", "type_": "real,    dimension(max_obc)", "name": "ctrop_min", "description": " Minimum value to diagnosed barotropic phase speed in terms of sqrt(gH). Should be about  0.  Default is 0.1. "}, {"units": null, "default": "0.0", "type_": "real,               dimension(max_obc,max_prog_tracers)", "name": "rel_coef_tracer_out", "description": " Relaxation coefficient to be used for outflow situation. Should be smaller then or equal to rel_coef_tracer_in. "}, {"units": null, "default": "1", "type_": "integer,            dimension(max_obc,max_prog_tracers)", "name": "obc_flow_relax", "description": " Integer variable specifying the flow relaxation zone (flow realxation of Martinsen and Engedahl (1987). Default value is 1. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "jere", "description": null}, {"units": null, "default": "0.0", "type_": "real,    dimension(max_obc)", "name": "rel_coef_eta_out", "description": " Relaxation coefficient to be used for outgoing wave situation. Should be smaller then or equal to rel_coef_eta_in. "}, {"units": null, "default": ".FALSE.", "type_": "logical,            dimension(max_obc,max_prog_tracers)", "name": "obc_consider_sources", "description": " Logical variable specifying if source and SGS terms of the normal tracer scheme are valid. Default value is .false.. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "jers", "description": null}, {"units": null, "default": "1", "type_": "integer, dimension(max_obc)", "name": "enh_pnts", "description": " Enhance viscosity and mixing at a stripe of enh_pnts decreasing with the distance from the boundary. Default = 1. "}, {"units": null, "default": ".FALSE.", "type_": "logical", "name": "debug_this_module", "description": " For debugging. "}, {"units": null, "default": "'NOGRAD'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_ud", "description": null}, {"units": null, "default": ".FALSE.", "type_": "logical, dimension(max_obc)", "name": "obc_damp_newton", "description": null}, {"units": null, "default": "''", "type_": "character(len=10), dimension(max_obc)", "name": "direction", "description": " open boundary direction. Each element value should be west, east, south or north. "}, {"units": null, "default": ".FALSE.", "type_": "logical, dimension(max_obc)", "name": "obc_consider_convu", "description": " logical variable that decide whether to account for one component of convu within the boundary. The appropriate behavior depends on the model configuration. Default value is .false. "}, {"units": null, "default": null, "type_": "character(len=32),  dimension(max_obc)", "name": "fieldname_eta", "description": " Fieldname  to read sea level data. "}, {"units": null, "default": ".FALSE.", "type_": "logical, dimension(max_obc)", "name": "obc_adjust_forcing_bt", "description": null}, {"units": null, "default": "'NONE'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_enhance_visc_back", "description": " logical variable that decide whether to enhance viscosity at the boundary. Default value is .false. "}, {"units": null, "default": ".0", "type_": "real,    dimension(max_obc)", "name": "ctrop_inc", "description": " value to be set for barotropic phase speed if incoming waves are diagnosed. (in terms of sqrt(gH)) Should be about 0. Default is 0. "}, {"units": null, "default": null, "type_": "character(len=32),  dimension(max_obc)", "name": "fieldname_ud", "description": null}, {"units": null, "default": "1.0", "type_": "real,    dimension(max_obc)", "name": "enh_fac_d", "description": " Factor applied to enhance mixing at the boundary. Default = 1. "}, {"units": null, "default": "1", "type_": "integer, dimension(max_obc)", "name": "rel_eta_pnts", "description": " Relax sea level at a stripe of rel_eta_pnts. Default = 1. "}, {"units": null, "default": null, "type_": "character(len=256), dimension(max_obc)", "name": "filename_ud", "description": null}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "js", "description": null}, {"units": null, "default": ".FALSE.", "type_": "logical", "name": "debug_phase_speed", "description": " Includes the phase speed into the model output. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "je", "description": null}, {"units": null, "default": ".FALSE.", "type_": "logical,            dimension(max_obc,max_prog_tracers)", "name": "obc_relax_tracer", "description": " logical variable that decide whether relax tracer or not. Default value is .false. "}, {"units": null, "default": ".FALSE.", "type_": "logical, dimension(max_obc)", "name": "obc_vert_advel_t", "description": " logical variable that decide whether to account for vertical advection of tracers at the boundary. The appropriate behavior depends on the model configuration. Default value is .false. (Currently inactive) "}, {"units": null, "default": ".FALSE.", "type_": "logical, dimension(max_obc)", "name": "obc_vert_advel_u", "description": " logical variable that decide whether to account for vertical advection of momentum at the boundary. The appropriate behavior depends on the model configuration. Default value is .false. "}, {"units": null, "default": "0.9", "type_": "real,    dimension(max_obc)", "name": "enh_fac_v", "description": " 'Safety factor' applied to maximum stable viscosity at the boundary. Default = 0.9 "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "jtre", "description": null}, {"units": null, "default": "'NOTHIN'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_eta", "description": " Surface elevation OBC "}, {"units": null, "default": null, "type_": "character(len=*), intent(in)", "name": "name", "description": " type of open bounday. "}, {"units": null, "default": "0.0", "type_": "real,    dimension(max_obc)", "name": "rel_coef_eta_in", "description": " Relaxation coefficient to be used for incoming wave situation. "}, {"units": null, "default": "'NOGRAD'", "type_": "character(len=128), dimension(max_obc)", "name": "obc_tan", "description": " Tangential velocity OBC "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "itrs", "description": null}, {"units": null, "default": "1.", "type_": "real,    dimension(max_obc)", "name": "damp_factor", "description": null}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "jtrs", "description": null}, {"units": null, "default": null, "type_": "character(len=256), dimension(max_obc,max_prog_tracers)", "name": "filename_tracer", "description": " Filename to read a tracer. It is allowed to put all data for a boundary in one file. "}, {"units": null, "default": "-999", "type_": "integer, dimension(max_obc)", "name": "itre", "description": null}, {"units": null, "default": ".FALSE.", "type_": "logical,            dimension(max_obc,max_prog_tracers)", "name": "obc_tracer_no_inflow", "description": " logical variable that decide whether apply orlanski obc on tracer or not. Default value is .false. "}, {"units": null, "default": "0.0", "type_": "real,               dimension(max_obc,max_prog_tracers)", "name": "rel_coef_tracer_in", "description": " Relaxation coefficient to be used for inflow situation. "}], "filename": "src/mom5/ocean_core/ocean_obc_barotrop.F90"}, {"namelist": "ocean_operators_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "use_legacy_DIV_UD", "description": " Set use_legacy_DIV_UD=.true. to reproduce Riga results for DIV_UD on Bgrid. For the case that the model grid is tripolar grid, when barotropic_halo > 1 in ocean_barotropic.F90, then we must set use_legacy_DIV_UD=.false., since will not reproduce between different number of processors if set use_legacy_DIV_UD=.true.  Tests indicate that with wider barotropic halos, there are some performance enhancements for use_legacy_DIV_UD=.false. Hence, the default is use_legacy_DIV_UD=.false.  For the case that the model grid is regular lat-lon grid, use_legacy_DIV_UD could be set to .true. or .false. for any positive value of barotropic_halo.  Note that the only difference between the new and old DIV_UD is order of operations induced by parentheses, which occurs in the tripolar fold region in the Arctic: old: DIV_UD(i,j) = (uh_bay  - uhim_bay  + vh_bax  - vhjm_bax)*datr_bt(i,j) new: DIV_UD(i,j) = ((uh_bay - uhim_bay) + (vh_bax - vhjm_bax))*datr_bt(i,j) "}], "filename": "src/mom5/ocean_core/ocean_operators.F90"}, {"namelist": "ocean_parameters_nml", "items": [{"units": "J/(kg degC)", "default": "3992.10322329649", "type_": "real, public", "name": "cp_ocean", "description": " Specific heat capacity J/(kg degC) for liquid seawater. Values are taken from from Jackett etal (2006) for preTEOS10 and from TEOS-10 manual for TEOS10 value. The default values differ from that in shared/constants since the MOM defaults are more updated. Note that there is a check inside of ocean_tempsalt.F90 to ensure that cp_ocean=cp_ocean_teos10 if using the teos10 recommendations, and cp_ocean=cp_ocean_preteos10 for cases not using teos10. "}, {"units": "Kelvin", "default": "273.15", "type_": "real, public", "name": "tfreeze", "description": " freezing point of fresh water at standard atmos pressure. Default tfreeze=273.15 "}, {"units": "kg/m^3", "default": "1035.0", "type_": "real, public", "name": "rho0", "description": " Boussinesq reference density.  Default rho0=1035.0 corresponds to the value in Gill (page 47), where he notes that the ocean density typically deviates less than 2 per cent from this value. But if using the Boussinesq approximation for other water bodies, such as the Baltic, then may wish to change rho0 to a more appropriate value. "}, {"units": "m/s^2", "default": "9.80", "type_": "real, public", "name": "grav", "description": " Gravitational acceleration at earth surface. Assumed to be constant throughout the ocean domain.  Default grav=9.8 corresponds to the \"grav\" parameter from shared/constants.F90. "}, {"units": "radians per second", "default": "7.2921e-5", "type_": "real, public", "name": "omega_earth", "description": " rotation of earth in radians per second Default omega_earth= 7.2921e-5, as per equation (4.1) in Griffies (2004). "}, {"units": "J/(kg degC)", "default": "4218.", "type_": "real, public", "name": "cp_liquid_runoff", "description": " Specific heat capacity J/(kg degC) for liquid water runoff from land. Default cp_liquid_runoff = 4218.0 is consistent with that used in the GFDL land model. "}, {"units": "J/(kg degC)", "default": "2106.", "type_": "real, public", "name": "cp_solid_runoff", "description": " Specific heat capacity J/(kg degC) for solid water runoff via calving land ice. Default cp_solid_runoff = 2106.0 is consistent with that used in the GFDL land model. "}], "filename": "src/mom5/ocean_core/ocean_parameters.F90"}, {"namelist": "ocean_pressure_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "zero_correction_term_grad", "description": " For debugging it is often useful to zero the contribution to the pressure gradient that arises from the \"correction\" term. Implemented only for depth based vertical coordinate models. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_pressure_force", "description": " For debugging it is often useful to zero the pressure force to zero. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_eta_over_h_zstar_pressure", "description": " For debugging zstar, we drop any eta/H contribution to the hydrostatic pressure.  This is wrong physically, but useful for certain tests. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_diagonal_press_grad", "description": " For debugging it is often useful to zero the contribution to the pressure gradient that arises from the along k-level gradient. Implemented only for depth based vertical coordinate models. "}], "filename": "src/mom5/ocean_core/ocean_pressure.F90"}, {"namelist": "ocean_sbc_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "zero_net_water_correction", "description": " Logical indicating whether to remove the area mean of the water correction flux so there is a net zero input of water to the ocean associated with water correction. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_constant_sst_for_restore", "description": " To over-ride the sfc_restore.nc value for temp restoring. use_constant_sst_for_restore=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_calving_fluxes", "description": " Logical for debugging to zero the calving flux passed into the ocean. Default zero_calving_fluxes=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "sbc_heat_fluxes_const_seasonal", "description": " Logical for setting the surface heat flux from the coupler to a global constant, and giving it a seasonally varying amplitude. Default is sbc_heat_fluxes_const_seasonal=.false. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "salt_restore_under_ice", "description": " Logical indicating whether to restore salinity under sea ice or not. When .false. then will not restore salinity  in regions where we use a \"frazil\" condition as a proxy for where sea-ice is present. Do not use sea ice extent from a sea ice model since we generally do not pass information regarding ice extent between the sea ice model and the ocean model. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_net_salt_restore", "description": " Logical indicating whether to remove the area mean of the salinity restore flux so there is a net zero input of salt to the ocean associated with restoring. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "salt_restore_as_salt_flux", "description": " When running a use_waterflux=.true. model, we may choose to add the salinity from a restoring condition as a salt flux or convert to a fresh water flux. The addition of salt does not alter the sea level nor does it alter the concentration of other tracers, whereas converting to an implied water flux will alter sea level and other concentrations.  So we generally recommend the default salt_restore_as_salt_flux=.true. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "avg_sfc_temp_salt_eta", "description": " If set to true, the t, s and sea_level fields passed up to the sea ice are averaged over a coupling interval. TRUE by default. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_waterflux_override_fprec", "description": " Set to true will allow for model to incorporate the latent heating from a fprec field that comes in through coupled model instantaneous interactions, but later will over-ride the mass flux from fprec with a dataset that is read in from a climatology or observations. The idea is to only modify the mass contribution from fprec through the over-ride, and leave the latent heat contribution untouched. Default use_waterflux_override_fprec=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_waterflux_override_calving", "description": " Set to true will allow for model to incorporate the latent heating from a calving field that comes in through coupled model instantaneous interactions, but later will over-ride the mass flux from calving with a dataset that is read in from a climatology or observations. The idea is to only modify the mass contribution from calving through the over-ride, and leave the latent heat contribution untouched. Default use_waterflux_override_calving=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "sbc_heat_fluxes_const", "description": " Logical for setting the surface heat flux from the coupler to a global constant. Default is sbc_heat_fluxes_const=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_heat_fluxes", "description": " Logical for debugging to set all heat fluxes into the ocean to zero, over-riding any input from Ice_ocean_boundary.  Default is .false. "}, {"units": "m", "default": "5.0", "type_": "real", "name": "max_ice_thickness", "description": " When coupling MOM to an ice model, the sea ice thickness may need to be restricted to prevent vanishing top-level in MOM. Set max_ice_thickness (meters) < dzt(k=1) to restrict. This truncation avoids the numerical problem but we loose mass conservation in the coupled sea ice and ocean system. We also alter the pressure felt on the ocean as applied by the sea ice. Different vertical coordinates are needed to do the problem more realistically.  Note that the problem of vanishing top layer is removed when use either ZSTAR or PSTAR as vertical coordinate. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "rotate_winds", "description": " Set to true when need to rotate the winds onto the ocean model grid. This is needed for cases where the winds are on a spherical grid and the ocean model uses tripolar=.true.  If generate the wind data on the ocean model grid, then do not need to rotate, since the rotation has already been done. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_net_water_restore", "description": " Logical indicating whether to remove the area mean of the water restore flux so there is a net zero input of water to the ocean associated with restoring. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_water_fluxes", "description": " Logical for debugging to zero the pme, river, and pme_taum1 into ocean, over-riding any input from Ice_ocean_boundary. Default zero_water_fluxes=.false. "}, {"units": "kg salt / kg ice", "default": "0.005", "type_": "real", "name": "ice_salt_concentration", "description": " The salt concentration of sea ice.  This is taken as a bulk value, and should be the same as that used by the ice model. Default is ice_salt_concentration=0.005, as that is the value used in the GFDL coupled climate model. "}, {"units": "DegC", "default": "0.0", "type_": "real", "name": "runoff_temp_min", "description": " The minimum temperature that river runoff into the ocean is assigned. Default runoff_temp_min=0.0. "}, {"units": "psu", "default": "35.0", "type_": "real", "name": "constant_sss_for_restore", "description": " The SSS value used if use_constant_sss_for_restore=.true. Default constant_sss_for_restore=35.0 "}, {"units": "degC", "default": "12.0", "type_": "real", "name": "constant_sst_for_restore", "description": " The SST value used if use_constant_sst_for_restore=.true. Default constant_sst_for_restore=12.0 "}, {"units": null, "default": ".true.", "type_": "logical", "name": "use_waterflux", "description": " Set to true when wish to use real fresh water flux as opposed to virtual salt fluxes. This is the recommended method. The alternative virtual tracer flux method (use_waterflux=.false.) is not routinely used at GFDL, so it may suffer from poor testing. Default use_waterflux=.true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "restore_mask_gfdl", "description": " For modifying the restore mask based on reading in the GFDL regional mask. Default restore_mask_gfdl=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "read_restore_mask", "description": " For reading in a mask that selects regions of the domain that are restored (mask=1) or not restored (mask=0). Default  read_restore_mask=.false., whereby restore_mask is set to tmask(k=1). "}, {"units": null, "default": ".false.", "type_": "logical", "name": "do_flux_correction", "description": " For applying surface flux correction to to a tracer or wind stress field. This code is used at GFDL for idealized perturbation experiments, such as when one wishes to artificially enhance the wind stress to test model sensitivity.  It is also appropriate for coupled models that may require a modification to the fluxes arrising from a coupled model, via reading in information from a pre-defined data file, Default do_flux_correction=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_ideal_calving", "description": " To add an idealized solid runoff or calving read from a file. This calving runoff is assumed to require melting, so it extracts latent heat of fusion from the liquid ocean The runoff coming from idealized cavling is NOT subject to the global normalization realized from zero_net_water_coupler=.true. Default use_ideal_calving=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_net_water_couple_restore", "description": " This logical keeps the total water forcing on the ocean+ice system to a global mean of zero at each time step.  We DO NOT include the ice melt in this normalization. Setting zero_net_water_couple_restore to true may be appropriate when running an ice-ocean model using a bulk formulae to compute evaporation (e.g., CORE) and when only providing a weak (or zero) salinity restoring.  It is not appropriate when running a coupled ocean-atmosphere model, where the moisture budget should be conserved without an artificial removal of the global mean. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_net_salt_correction", "description": " Logical indicating whether to remove the area mean of the salinity correction flux so there is a net zero input of salt to the ocean associated with salt correction. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "do_bitwise_exact_sum", "description": " Set true to do bitwise exact global sum. When it is false, the global sum will be non-bitwise_exact, but will significantly increase efficiency. The default value is do_bitwise_exact_sum=.true. in order to ensure answers do not change when alter processors.  But if wish to enhance the efficiency of coupled ocean-ice models that use one of the global normalization options zero_net_salt_restore        =.true. zero_net_salt_correction     =.true. zero_net_water_restore       =.true. zero_net_water_correction    =.true. zero_net_water_coupler       =.true. zero_net_water_couple_restore=.true. then one may wish to consider setting do_bitwise_exact_sum=.false. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "avg_sfc_velocity", "description": " If set to true, the u and v fields passed up to the sea ice are averaged over a coupling interval. TRUE by default. "}, {"units": "ppt", "default": "-0.5", "type_": "real", "name": "max_delta_salinity_restore", "description": " When computing the restoring flux for salinity, we can define a maximum absolute value for the difference between salinity(k=1) and the restoring salinity from a dataset.  This approach is useful especially in NAtl western boundary, where poor Gulf Stream separation can lead to large salinity biases.  If restore too much the salinity field, we can spuriously transport large amounts of fresh water to the subpoloar gyre, thus impacting the overturning circulation too much. If max_delta_salinity_restore < 0.0, then will NOT provide a max to the delta salinity; will instead compute an unbounded restoring flux. Default max_delta_salinity_restore=-0.50. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_net_pme_eta_restore", "description": null}, {"units": null, "default": ".false.", "type_": "logical", "name": "calvingspread", "description": " Set to true if wish to use the spread_river_horz algorithm to spread the calving flux horizontally over an area into the ocean wider than set by the coupler.  This option requires the setup of a table for determining the points over which we spread. Default calvingspread=.false. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "constant_hlv", "description": " Treat latent heat of vaporization as a constant. Otherwise, use the TEOS-10 approach in which hlf is function of surface salinity. Note, TEOS-10 approach is only valid using Absolute Salinity and conservative temperature as the prognostic fields. Default constant_hlv = .true., which is the case for pre-TEOS-10 methods. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "read_stokes_drift", "description": " This option is to be used when coupling to a surface wave model such as Wavewatch III that provides both the Stokes drift (m/s) velocity at the ocean surface, and a decay scale for projecting the Stokes drift into the interior.  Default read_stokes_drift = .false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_full_patm_for_sea_level", "description": " The option use_full_patm_for_sea_level allows for the passing of the sea level including the full weight of sea ice back to the ice model.  This approach maintains the max weight on the liquid ocean according to the nml variable max_ice_thickness.  But it does allow the sea ice to know when there is actually more sea ice than that set by max_ice_thickness.  This option then provides for a negative feedback on the runaway growth of sea ice, since the full pressure acting to make the ice flow will be correctly felt.  This is a new option, and is not fully tested, So the default is use_full_patm_for_sea_level=.false "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_water_fluxes", "description": " Logical for debugging water fluxes. Must be true for any of the options zero_water_fluxes, zero_calving_fluxes, zero_pme_fluxes or zero_runoff_fluxes to be enabled. Default debug_water_fluxes=.false. "}, {"units": "dimensionless", "default": "0.0", "type_": "real", "name": "salt_correction_scale", "description": " A scale multiplying the flux correction for salinity. Default salt_correction_scale=0.0. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "land_model_heat_fluxes", "description": " For the case where land model passes through the coupler the heat flux associated with the liquid runoff and calving land ice fields. This heat flux is computed relative to 0C, and takes the form heat flux = mass flux of water * temp of water * heat capacity, where the water can be either liquid or solid.  For many coupled models, the water temperature is assumed to be that of the SST.  But more complete land models now carry the heat of its water relative to 0C, in which case the ocean model does not need to assume anything about the heat content of the land water. Default land_model_heat_fluxes=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "runoffspread", "description": " Set to true if wish to use the spread_river_horz algorithm to spread the river runoff flux horizontally over an area into the ocean wider than set by the coupler.  This option requires the setup of a table for determining the points over which we spread. Default runoffspread=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_pme_fluxes", "description": " Logical for debugging to zero the pme flux passed into the ocean. Default zero_pme_fluxes=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_waterflux_override_evap", "description": " Set to true will allow for model to incorporate the latent heating from an evap field that comes in through coupled model instantaneous interactions, but later will over-ride the mass flux from evap with a dataset that is read in from a climatology or observations. The idea is to only modify the mass contribution from evap through the over-ride, and leave the latent heat contribution untouched. Default use_waterflux_override_evap=.false. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "constant_hlf", "description": " Treat latent heat of fusion as a constant. Otherwise, use the TEOS-10 approach in which hlf is function of surface salinity. Note, TEOS-10 approach is only valid using Absolute Salinity and conservative temperature as the prognostic fields. Default constant_hlf = .true., which is the case for pre-TEOS-10 methods. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_river_fluxes", "description": " Logical for debugging to zero the river (calving+runoff) flux passed into the ocean. Default zero_river_fluxes=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_net_water_coupler", "description": " Logical indicating whether to remove the area mean of the water passed through the coupler so there is a net zero input of fresh water to the ocean associated with p-e+r. Do so by removing area mean from pme--keep river values unchanged. Note that a choice must be made whether to remove the area mean from rivers or pme. We choose pme since it is more evenly distributed than rivers. Also note that we DO NOT include the ice melt in this normalization. The reason is that we only wish to ensure the ocean+ice system has a zero net water.  When melt or form sea ice, this only transfers water between liquid ocean and solid sea ice, and no normalization is appropriate for this case. It is only the water exchanged with the land and atmosphere that is normalized. "}, {"units": "g salt / kg runoff water (ppt)", "default": "0.0", "type_": "real", "name": "runoff_salinity", "description": " The salinity of river runoff water. Default is runoff_salinity=0.0. "}, {"units": "psu", "default": "35.0", "type_": "real", "name": "salinity_ref", "description": " Reference salinity used for converting fresh water flux to salt flux. "}, {"units": "dimensionless", "default": "0.0", "type_": "real", "name": "tau_x_correction_scale", "description": " A scale multiplying the flux correction for tau_x. Default tau_x_correction_scale=0.0. "}, {"units": "dimensionless", "default": "0.0", "type_": "real", "name": "tau_y_correction_scale", "description": " A scale multiplying the flux correction for tau_y. Default tau_y_correction_scale=0.0. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_ideal_runoff", "description": " To add an idealized liquid runoff read from a file. This runoff is assumed to enter the ocean with the same temperature as SST, and to be liquid.  It is an additional runoff, so that any other runoff remains unaltered.  The runoff coming from idealized runoff is NOT subject to the global normalization realized from zero_net_water_coupler=.true. Default use_ideal_runoff=.false. "}, {"units": "day", "default": "-30.", "type_": "real", "name": "temp_restore_tscale", "description": " Time scale in days for restoring temperature within the top model grid cell. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "convert_river_to_pme", "description": " Logical for debugging.  Here we add the river water input (calving+runoff) to pme, then set river=calving=runoff=0.0. Default convert_river_to_pme=.false. "}, {"units": "dimensionless", "default": "0.0", "type_": "real", "name": "temp_correction_scale", "description": " A scale multiplying the flux correction for temperature. Default temp_correction_scale=0.0. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_constant_sss_for_restore", "description": " To over-ride the sfc_restore.nc value for salinity restoring. use_constant_sss_for_restore=.false. "}, {"units": "day", "default": "-30.", "type_": "real", "name": "salt_restore_tscale", "description": " Time scale in days for restoring salinity within the top model grid cell. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_runoff_fluxes", "description": " Logical for debugging to zero the runoff flux passed into the ocean. Default zero_runoff_fluxes=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_surface_stress", "description": " Logical for debugging to zero all surface stress applied to the ocean, over-riding any input from Ice_ocean_boundary.  Default is .false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "waterflux_tavg", "description": " Set to true when aiming to suppress the leap-frog computational mode by setting pme and river equal to a time averaged value over the present and previous time step.  This method requires an extra field in the restart file.  This method is not needed when using the TWO_LEVEL time tendency.  It remains for those who wish to use the leap-frog THREE_LEVEL time stepping scheme. Note that it does not lead to simple checks of conservation across model components, since there is a time averaging performed for the water flux added to the ocean model.  It is generally NOT recommended.  Default waterflux_tavg=.false. "}, {"units": "day", "default": "-30.", "type_": "real", "name": "eta_restore_tscale", "description": " Time scale in days for restoring surface height to produce a modification to surface water flux.  This option is only available when run with use_waterflux=.true. "}, {"units": "W/m2", "default": "0.0", "type_": "real", "name": "sbc_heat_fluxes_const_value", "description": " Value for the constant heat flux when using sbc_heat_fluxes_const=.true. Default sbc_heat_fluxes_const_value=0.0. "}], "filename": "src/mom5/ocean_core/ocean_sbc.F90"}, {"namelist": "ocean_thickness_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module_detail", "description": " For debugging pressure coordinate models. Lots of grid information printed. "}, {"units": "m", "default": "5.0", "type_": "real", "name": "thickness_dzt_min_init", "description": " For determining a modified bottom depth array that is required to ensure pressure model, based on initial in-situ density, retains a nontrivial bottom cell thickness in the case when initialize_zero_eta=0.0 Default thickness_dzt_min_init=5.0. "}, {"units": null, "default": "1.0", "type_": "real", "name": "rescale_rho0_value", "description": " Fractional value for rescaling rho0 in the a region. Default rescale_rho0_value=1.0. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "rescale_mass_to_get_ht_mod", "description": " Expedient to allow for the computation of ht_mod. in the case when initialize_zero_eta=.true.  Here, we run the pressure based model with a rescaled mass that is sufficient to maintain non-negative dzt, at least for a short period.  This allows for one to run a day integration to produce ht_mod. rescale_mass_to_get_ht_mod=.true. will produce spurious results in general due to problems with the pressure gradient computation.  So it is not recommended for more than initial day or so. Default rescale_mass_to_get_ht_mod=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "linear_free_surface", "description": " For debugging, set the thickness of top cell in geopotential model to time independent values. This option is needed if use the kappa_sort diagnostic. Default linear_free_surface=.false. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "write_a_restart", "description": " Set true to write a restart.  False setting only for rare cases where wish to benchmark model without measuring the cost of writing restarts and associated chksums. Default is write_a_restart=.true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "full_step_topography", "description": " For case where with to only have the dzt be determined by the full step bottom topography. This nml option is provided only for backwards compatibility with older mom experiments using the full step topog. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "update_dzwu_k0", "description": " A bug in certain versions of MOM4p1 was present, whereby Thickness%dzwu(i,j,k=0) was never updated, except for GEOPOTENTIAL vertical coordinates.  This logical, whose default is update_dzwu_k0=.true., is provided for legacy purposes. To test the older results, have update_dzwu_k0=.false. "}, {"units": "m", "default": "1.0", "type_": "real", "name": "thickness_dzt_min", "description": " Minimum dzt set when enforce_positive_dzt set true. Default thickness_dzt_min=1.0. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "read_rho0_profile", "description": " To read in an initial rho0(z) profile to assist in defining the initial settings for the pressure increments dst, for use in setting the pressure-based vertical coordinate grids.  Ideally, this profile is determined by the level averaged density in the initial conditions.  Note that it is essential to have rho0_profile have a sensible value at all depths even if there is no water there, since there are places where we divide by rho0_profile in rock.  Also, be mindful that with denser water at depth, the pressure levels will be coarser at depth than if using the trivial density profile rho0(k)=rho0. This option is experimental, so it is recommended that user maintain the default read_rho0_profile=.false. "}, {"units": null, "default": "-1.0", "type_": "real", "name": "rescale_rho0_basin_label", "description": " For rescaling rho0 in a basin with a number rescale_rho0_basin_label. For the Black Sea using GFDL basin masks in OM3, rescale_rho0_basin_label=7.0. Default rescale_rho0_basin_label=-1.0 "}, {"units": null, "default": "1.e-5", "type_": "real", "name": "epsilon_init_thickness", "description": " For determining how strict we are to check for the thickness of a column when initializing pressure based vertical coordinate models. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "rescale_rho0_mask_gfdl", "description": " For specifying the rescale_rho0_mask based on reading in the GFDL regional mask. Default rescale_rho0_mask_gfdl=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "initialize_zero_eta", "description": " For pressure-based models, we can (with some work) initialize the model to have a zero surface height.  The recomended approach is to allow the surface height to be whatever it wants to be, and let adjustments smooth it over time.  Default initialize_zero_eta=.false. "}, {"units": "m", "default": "0.01", "type_": "real", "name": "depth_min_for_sigma", "description": " For sigma coordinates, have minimum depth so that have layers defined globally.  Masks will zero out results over land, but for numerics it is useful to compute everywhere. Default depth_min_for_sigma=0.01. "}, {"units": null, "default": "25", "type_": "integer", "name": "max_num_bad_print", "description": " Maximum bad grid cells printout for identifying problematic simulations. Default max_num_bad_print=25. "}, {"units": null, "default": "'energetic'", "type_": "character(len=32)", "name": "thickness_method", "description": " To determine whether use energetic method or finite volume method to compute the thickness of a grid cell. Options are thickness_method=energetic or thickness_method=finitevolume. There is little overall difference in results for pbot and eta. However, it has been found that for realistic bottom topography simulations, the vertical velocity component is very noisy with the finitevolume approach.  So this approach is considered experimental.  The default is thickness_method='energetic'. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "read_rescale_rho0_mask", "description": " For reading in a basin mask of use to re-define rho0 in isolated regions such as the Black Sea.  This is used for modifying the definition of the pressure or pstar levels during the initialization of the thicknesses dst.  This approach is appropriate in general, but has only been tested when modify the pressure levels within a fully enclosed basin. Default read_rescale_rho0_mask=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "pbot0_simple", "description": " For testing purposes, have this option compute pbot0=g*rho0*ht with rho0= constant.  Default pbot0_simple=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "enforce_positive_dzt", "description": " For cases where wish to run model even with negative thickness. Default enforce_positive_dzt=.false. "}], "filename": "src/mom5/ocean_core/ocean_thickness.F90"}, {"namelist": "ocean_topog_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "kmt_recompute", "description": " To recompute the kmt array based on min_thickness.  This step is not recommended in general, since it can modify the kmt array which may be in the grid spec file. But it may be of use for specialized situations, such as when you wish to use the same topography file with a refined vertical resolution. "}, {"units": null, "default": "0", "type_": "integer", "name": "kmt_recompute_offset", "description": " To recompute the kmt array based on min_thickness, with an offset determined by kmt_recompute_offset.  Default kmt_recompute_offset=0. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "write_topog", "description": null}, {"units": null, "default": "5500.0", "type_": "real", "name": "flat_bottom_ht", "description": " Depth to make the flat_bottom. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "flat_bottom", "description": " For debugging, it is often useful to over-ride the grid spec file and simply make the domain flat bottom. "}, {"units": null, "default": "50", "type_": "integer", "name": "flat_bottom_kmt", "description": " Number of depth levels to use for the flat_bottom option. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "debug_this_module", "description": " For debugging. "}, {"units": null, "default": "1.0", "type_": "real", "name": "min_thickness", "description": " min_thickness is only used for Mosaic grid. Since there is no kmt available in mosaic grid, need to set min_thickness to configure kmt based on ht and zw. Default min_thickness=1.0 metre. "}], "filename": "src/mom5/ocean_core/ocean_topog.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_core/ocean_types.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_core/ocean_util.F90"}, {"namelist": "ocean_velocity_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "zero_tendency_implicit", "description": " For debugging. Will not use implicit part of the tendency. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "truncate_verbose", "description": " For verbose printout "}, {"units": "dimensionless", "default": "0.6", "type_": "real", "name": "adams_bashforth_epsilon", "description": " Dimensionless parameter for 2nd order Adams-Bashforth implementation of velocity advection.  Values between 0.5 and 1.0 are recommended. Value of 0.5 leads to second order accurate, but it is formally weakly unstable (Durran, Section 2.3.4). "}, {"units": null, "default": ".true.", "type_": "logical", "name": "adams_bashforth_third", "description": " For a third order treatment of the velocity advection. This is stable and so needs no temporal dissipation (Section 2.3.6 of Durran).  This is the model default. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "write_a_restart", "description": " Set true to write a restart.  False setting only for rare cases where wish to benchmark model without measuring the cost of writing restarts and associated chksums. Default is write_a_restart=.true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_constant_velocity", "description": " For running with time independent constant velocity. For use with idealized cases. Default=.false. "}, {"units": "meter/sec", "default": "0.0", "type_": "real", "name": "constant_v", "description": " For running with use_constant_velocity. Set the j-velocity component to this value. Default constant_v=0.0 "}, {"units": "meter/sec", "default": "0.0", "type_": "real", "name": "constant_u", "description": " For running with use_constant_velocity. Set the i-velocity component to this value. Default constant_u=0.0 "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_tendency_explicit_b", "description": " For debugging. Will not use explicit-b part of the tendency. "}, {"units": null, "default": "2.0", "type_": "real", "name": "max_cgint", "description": " Maximum internal gravity wave speed--used for diagnosing conservative estimate of stable time steps. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_tendency_explicit_a", "description": " For debugging. Will not use explicit-a part of the tendency. "}, {"units": "meter/sec", "default": "1.0", "type_": "real", "name": "truncate_velocity_value", "description": " Speed above which will truncate the baroclinic velocity "}, {"units": null, "default": ".false.", "type_": "logical", "name": "truncate_velocity", "description": " Truncate the baroclinic velocity to a maximum value.  Useful for cases where the initial spin-up initiates spuriously large model velocities that would otherwise cause the model to blow-up. Also can be used as a very simple \"polar filter\" in cases where have spherical coordinates and wish to avoid using the traditional polar filters. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "update_velocity_via_uprime", "description": " When updating the velocity, this method first computes uprime as the updated velocity minus the barotropic pressure gradient. This approach is motivated from the rigid lid approach, in which the surface pressure was never used to update the barotropic fields. With the explicit free surface, we have the choice to update the full velocity field, with the barotropic contributions to the pressure field resulting from a time average in the external mode algorithm.  This approach is for testing only, and it has been found to be unstable for many cases.  update_velocity_via_uprime=.true. uses the older aproach, in which the udrho,vdrho fields are taken from the external mode module.  update_velocity_via_uprime=.false. only takes the time averaged pressure from the external mode, and thus updates the full velocity and so recomputes the udrho,vdrho fields.  Default update_velocity_via_uprime=.true. The case of update_velocity_via_uprime=.false. is for testing only. It is not supported for general use. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_tendency", "description": " For debugging. Will freeze the baroclinic velocity  fields. "}, {"units": "dimensionless", "default": "0.0", "type_": "real", "name": "truncate_velocity_lat", "description": " Latitude poleward of which we truncate the velocity. Useful in cases when wish to truncate the velocity only in polar regions. Default is 0.0 "}], "filename": "src/mom5/ocean_core/ocean_velocity.F90"}, {"namelist": "ocean_velocity_advect_nml", "items": [{"units": null, "default": ".true.", "type_": "logical", "name": "velocity_advect_centered", "description": " For using the standard second order centered method for computing the advection of linear momentum. This is the default: velocity_advect_centered=.true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging "}, {"units": null, "default": ".false.", "type_": "logical", "name": "velocity_advect_upwind", "description": " For using the first order upwind method for computing the advection of linear momentum. Default: velocity_advect_upwind=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_velocity_advect_vert", "description": " For debugging, it is often useful to remove vertical advection of velocity. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_velocity_advect_horz", "description": " For debugging, it is often useful to remove horizontal advection of velocity. "}], "filename": "src/mom5/ocean_core/ocean_velocity_advect.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_core/ocean_workspace.F90"}, {"namelist": "oda_nml ", "items": [{"units": null, "default": "100", "type_": "integer", "name": "max_sfc_obs", "description": " Size of allocation for surface observations "}, {"units": null, "default": "90.0", "type_": "real", "name": "assim_end_lat", "description": " Northern data mask  boundary "}, {"units": null, "default": "24", "type_": "integer", "name": "assim_interval", "description": " Time between calls to oda (hours) "}, {"units": null, "default": null, "type_": "integer(2)", "name": "assim_layout", "description": null}, {"units": null, "default": "100000", "type_": "integer", "name": "max_profiles", "description": " Size of allocation for profile data "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_this_module", "description": null}, {"units": null, "default": "-90.0", "type_": "real", "name": "assim_start_lat", "description": " Southern data mask  boundary "}, {"units": null, "default": ".false.", "type_": "logical", "name": "save_oma_snaps", "description": null}, {"units": null, "default": null, "type_": "integer", "name": "nk_asm", "description": " Bottom model level for data mask "}, {"units": null, "default": ".true.", "type_": "logical", "name": "do_iau", "description": " Incremental analysis update (evenly distribute increments between calls to ODA.) "}, {"units": null, "default": ".true.", "type_": "logical", "name": "save_omf_snaps", "description": null}, {"units": null, "default": ".true.", "type_": "logical", "name": "do_convect_adjust", "description": " Adjust for gravitational instability in model after applying increments. "}, {"units": null, "default": "'NO_ASSIM'", "type_": "character(len=8)", "name": "assim_method", "description": " Options are: Var2d, EAKF and NO_ASSIM "}], "filename": "src/mom5/ocean_core/oda_driver.F90"}, {"namelist": "ocean_adv_vel_diag_nml", "items": [{"units": "dimensionless", "default": "10.0", "type_": "real", "name": "large_cfl_value", "description": " Large value for Courant number, above which will write some diagnostics. "}, {"units": "dimensionless", "default": "100.0", "type_": "real", "name": "max_cfl_value", "description": " Critical value for Courant number, above which the model will be brought down. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "verbose_cfl", "description": " For printing out lots of information about regions of large Courant numbers. "}, {"units": "dimensionless", "default": "-1", "type_": "integer", "name": "diag_step", "description": " Number of time steps between which compute the diagnostics. "}], "filename": "src/mom5/ocean_diag/ocean_adv_vel_diag.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_diag/ocean_diagnostics.F90"}, {"namelist": "ocean_drifters_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "use_this_module", "description": " Must be true to run this module. Default use_this_module=.false. "}, {"units": null, "default": "1", "type_": "integer", "name": "output_interval", "description": " Interval in timesteps between drifter writes "}], "filename": "src/mom5/ocean_diag/ocean_drifters.F90"}, {"namelist": "ocean_tracer_diag_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "debug_diagnose_mixingA", "description": " Set true for help with debugging the diagnostic for mixing. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "smooth_mld_for_subduction", "description": " Smooth the diagnosed mixed layer depth to be used for subduction diagnostics. Default smooth_mld_for_subduction=.true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_diagnose_mixingC", "description": " Set true for more help with debugging the diagnostic for mixing. Lots of output. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_diagnose_mixingB", "description": " Set true for more help with debugging the diagnostic for mixing. Lots of output. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_diagnose_mixingD", "description": " Set true for more help with debugging the diagnostic for mixing. Lots of output. "}, {"units": "dimensionless", "default": "-1", "type_": "integer", "name": "diag_step", "description": " Number of time steps between which compute the diagnostics. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "smooth_mld", "description": " Smooth the diagnosed mixed layer depth. Default smooth_mld=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "do_bitwise_exact_sum", "description": " Set true to do bitwise exact global sum. When it is false, the global sum will be non-bitwise_exact, but will significantly increase efficiency. The default value is false. "}, {"units": "m/s^2", "default": "0.0003", "type_": "real", "name": "buoyancy_crit", "description": " Critical buoyancy difference relative to surface for computing mixed layer depth. Default buoyancy_crit=0.0003. "}, {"units": null, "default": "0", "type_": "integer", "name": "smooth_kappa_sort", "description": " Number of 1-2-1 smooths applied to kappa_sort "}, {"units": "kg/m^3/m", "default": "1e-5", "type_": "real", "name": "rho_grad_min", "description": " min vertical density gradient (kg/m^3/m) used in computing kappa sorted in the diagnostic mixing sorted. "}, {"units": "days", "default": "30.0", "type_": "real", "name": "tracer_conserve_days", "description": " Number of days between which compute the tracer conservation diagnostics. "}, {"units": null, "default": "1.0", "type_": "real", "name": "frazil_factor", "description": null}, {"units": "degC", "default": "2.0", "type_": "real", "name": "dtheta_crit", "description": " Critical temperature difference relative to surface for computing mixed_layer_depth_dtheta . Default dtheta_crit=2.0. "}, {"units": null, "default": "1.004867", "type_": "real", "name": "psu2ppt", "description": " The preTEOS10 EOS used in MOM requires salinity to use the Practical Salinity Scale (pss).  This scale is also known as the Practical Salinity Unit (psu).  However, salinity as an absolute concentration in parts per thousand is more convenient to use when performing budget analyses such as in this module. Conversion between pss and ppt depends on the precise ratio of ions in the seawater. Hence, the conversion is not constant. However, it is close to a constant, as reported in Jackett etal (2004).  For purposes of budgets, we take this conversion as a constant. The conversion is  s(ppt) = psu2ppt * s(psu)  where again s(psu) is what MOM carries as its prognostic salinity field when preTEOS10 EOS is used.  Jackett etal (2004), correcting a type in equation (53) of Feistel (2003), report that  s(ppt) = 1.004867 * s(psu)  "}, {"units": "kg/m^3/m", "default": "1e28", "type_": "real", "name": "rho_grad_max", "description": " max vertical density gradient (kg/m^3/m) used in computing kappa sorted "}], "filename": "src/mom5/ocean_diag/ocean_tracer_diag.F90"}, {"namelist": "ocean_tracer_util_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "debug_diagnose_mass_of_layer", "description": " To help debug the algorithm to diagnose mass of fluid within a neutral density layer. Default:  debug_diagnose_mass_of_layer=.false. "}, {"units": null, "default": "1e-5", "type_": "real", "name": "epsln_diagnose_mass_of_layer", "description": " Relative mass difference allowable between layer and level total mass. Default: epsln_diagnose_mass_of_layer=1e-4. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "rebin_onto_rho_all_values", "description": " Set true to if wish to bin all values into density classes, even those cells whose density is outside the max and min range of the density bins.  The default is rebin_onto_rho_all_values=.true., which means those cells with extreme density values will be included. This default is consistent with the default computation of transport_on_nrho. "}], "filename": "src/mom5/ocean_diag/ocean_tracer_util.F90"}, {"namelist": "ocean_velocity_diag_nml", "items": [{"units": "dimensionless", "default": "100.0", "type_": "real", "name": "max_cfl_value", "description": " Critical value for Courant number, above which the model will be brought down. "}, {"units": "dimensionless", "default": "-1", "type_": "integer", "name": "diag_step", "description": " Number of time steps between which compute the diagnostics. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "do_bitwise_exact_sum", "description": " Set true to do bitwise exact global sum. When it is false, the global sum will be non-bitwise_exact, but will significantly increase efficiency. The default value is false. "}, {"units": "dimensionless", "default": "100", "type_": "integer", "name": "land_cell_num_max", "description": " Maximum number of land cells where will printout nonzero velocity points. Default land_cell_num_max=100. "}, {"units": "dimensionless", "default": "10.0", "type_": "real", "name": "large_cfl_value", "description": " Large value for Courant number, above which will write some diagnostics. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For some debugging purposes "}, {"units": null, "default": ".false.", "type_": "logical", "name": "verbose_cfl", "description": " For printing out lots of information about regions of large Courant numbers. "}, {"units": null, "default": "-1", "type_": "integer", "name": "energy_diag_step", "description": " Perform energy analysis every n timesteps (1==every time step). This diagnostic is expensive, so should be used sparingly during production runs. "}], "filename": "src/mom5/ocean_diag/ocean_velocity_diag.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_tracers/ocean_age_tracer.F90"}, {"namelist": "ocean_frazil_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "use_this_module", "description": " If true, then compute frazil heating. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "freezing_temp_teos10", "description": null}, {"units": null, "default": ".true.", "type_": "logical", "name": "frazil_only_in_surface", "description": " For typical case where compute frazil heating only in the surface grid cell.  Will assume the gauge pressure is zero in this case when computing freezing temperature. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "freezing_temp_preteos10", "description": null}, {"units": null, "default": ".false.", "type_": "logical", "name": "freezing_temp_simple", "description": " To use the simplified freezing point temperature of seawater, as used in MOM4.0. "}, {"units": "dimensionless", "default": "1.0", "type_": "real", "name": "frazil_factor", "description": " This factor accounts for possibly different time stepping used in the sea ice model relative to the ocean model.  If sea-ice and ocean use same time stepping schemes, then frazil_factor=1.0. If sea-ice uses a twolevel scheme and ocean a threelevel leap-frog, then frazil_factor=0.5. Default is 1.0 since the GFDL sea ice model SIS uses  a two-level time stepping scheme and MOM defaults to a staggered two-level scheme. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging this module "}, {"units": null, "default": ".true.", "type_": "logical", "name": "air_saturated_water", "description": null}], "filename": "src/mom5/ocean_tracers/ocean_frazil.F90"}, {"namelist": "ocean_passive_nml", "items": [{"units": null, "default": "1.0", "type_": "real", "name": "wall_value", "description": " Value of tracer concentration within the wall. Default=1.0. "}, {"units": null, "default": "1.0", "type_": "real", "name": "shelf_value", "description": null}, {"units": null, "default": "200.0", "type_": "real", "name": "patch_zbot", "description": " Depth at the bottom of the tracer patch. "}, {"units": null, "default": "1.0", "type_": "real", "name": "patch_value", "description": " Value of the tracer concentration within a patch. Default=1.0. "}, {"units": "metre", "default": "1000.0", "type_": "real", "name": "efold_depth", "description": " The efolding depth used for exponential tracer profile. Default=1000.0. "}, {"units": null, "default": "70.0", "type_": "real", "name": "shelfbowl_north", "description": null}, {"units": null, "default": ".false.", "type_": "logical", "name": "patch_init_klevel_gaussian", "description": " To initialize on the klevel with a gaussian region. Default=patch_init_klevel_gaussian=.false. "}, {"units": null, "default": "0.0", "type_": "real", "name": "patch_ztop", "description": " Depth at the top of the tracer patch. "}, {"units": null, "default": "1.0", "type_": "real", "name": "layer_value", "description": " Value of tracer concentration within the layer. Default=1.0. "}, {"units": null, "default": "100.0", "type_": "real", "name": "layer_ztop", "description": " Depth at the top of the tracer layer. "}, {"units": null, "default": "200.0", "type_": "real", "name": "layer_zbot", "description": " Depth at the bottom of the tracer layer. "}, {"units": "dimensionless", "default": "1.0", "type_": "real", "name": "exponential_value", "description": " The tracer value at zero depth when choosing the exponential profile. Default=1.0. "}, {"units": null, "default": "0.33333", "type_": "real", "name": "wall_ratio_south", "description": " Ratio of the full j-range, northward of which we place the wall. "}, {"units": null, "default": "0.33333", "type_": "real", "name": "patch_ratio1", "description": " For setting position of tracer patch. "}, {"units": null, "default": "0.66666", "type_": "real", "name": "patch_ratio2", "description": " For setting position of tracer patch. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging the module. "}, {"units": null, "default": "'patch'", "type_": "character(len=32)", "name": "common_init_condition", "description": " Default for the tracer initial conditions.  Options are the following: common_init_condition='level' common_init_condition='wall' common_init_condition='patch' common_init_condition='patch_'klevel, with \"klevel\" an integer for the k-level that will place the patch. common_init_condition='exponential' common_init_condition='shelfbowl' common_init_condition='rho_surface' common_init_condition='temp_sq_init' common_init_condition='salt_sq_init' Default=common_init_condition='patch' "}, {"units": null, "default": "0.66666", "type_": "real", "name": "wall_ratio_north", "description": " Ratio of the full j-range, southward of which we place the wall. "}], "filename": "src/mom5/ocean_tracers/ocean_passive.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_tracers/ocean_residency.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_tracers/ocean_residency_integrand.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_tracers/ocean_residency_meta.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_tracers/ocean_residency_ml.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_tracers/ocean_residency_range.F90"}, {"namelist": "ocean_tempsalt_nml", "items": [{"units": "deg C", "default": "-5.0", "type_": "real", "name": "t_min", "description": " Minimum potential/conservative temperature below which we gracefully bring down the model. "}, {"units": "ppt", "default": "0.0", "type_": "real", "name": "s_min", "description": " Minimum salinity below which we gracefully bring down the model. "}, {"units": "psu", "default": "30.0", "type_": "real", "name": "reinit_ts_with_ideal_svalue", "description": " For setting the reinitialized temperature value using the ideal profile. Default reinit_ts_with_ideal_svalue = 30.0 "}, {"units": "psu", "default": "1.0", "type_": "real", "name": "s_min_limit", "description": " Minimum salinity below which will employ upwind advection instead of quicker, and horizontal diffusion instead of neutral physics. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "pottemp_2nd_iteration", "description": " For taking extra iteration in computation of potential temperature from conservative temperature and salinity. Default is true. "}, {"units": "deg C", "default": "32.0", "type_": "real", "name": "t_max_limit", "description": " Maximum potential/conservative temperature above which will employ upwind advection instead of quicker, and horizontal diffusion instead of neutral physics. "}, {"units": "metre", "default": "1000.0", "type_": "real", "name": "reinit_ts_with_ideal_efold", "description": " For setting efolding of reinitialized temp and salinity profile. Default reinit_ts_with_ideal_efold=1000. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "pottemp_equal_contemp", "description": " For certain idealized cases where the difference between potential temperature and conservative temperature is irrelevant. Default=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "teos10", "description": " For choosing whether to use the TEOS-10 equation of state. This usage requires conservative temperature as the temperature variable, and two salinity variables: Preformed Salinity and Absolute Salinity anomaly. Default teos10=.false. "}, {"units": "C", "default": "10.0", "type_": "real", "name": "reinit_ts_with_ideal_tvalue", "description": " For setting the reinitialized temperature value using the ideal profile. Default reinit_ts_with_ideal_tvalue = 10.0 "}, {"units": null, "default": ".false.", "type_": "logical", "name": "reinit_ts_with_ideal", "description": " For setting up an ideal temperature and salinity profile that is generated in the model. This profile can be generated after the model has already been running, hence the name \"reinit\" for \"reinitialize.\" "}, {"units": null, "default": "'conservative_temp'", "type_": "character(len=32)", "name": "temperature_variable", "description": " For choosing the temperature variable used in the model. Choices are 'conservative_temp' and 'potential_temp'. Since conservative temperature is more accurate, it is the default. "}, {"units": "deg C", "default": "-2.0", "type_": "real", "name": "t_min_limit", "description": " Minimum potential/conservative temperature below which will employ upwind advection instead of quicker, and horizontal diffusion instead of neutral physics. "}, {"units": "ppt", "default": "70.0", "type_": "real", "name": "s_max", "description": " Maximum salinity below which we gracefully bring down the model. "}, {"units": "deg C", "default": "40.0", "type_": "real", "name": "t_max", "description": " Maximum potential/conservative temperature above which we gracefully bring down the model. "}, {"units": "psu", "default": "42.0", "type_": "real", "name": "s_max_limit", "description": " Maximum salinity below which will employ upwind advection instead of quicker, and horizontal diffusion instead of neutral physics. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging the module. "}], "filename": "src/mom5/ocean_tracers/ocean_tempsalt.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_tracers/ocean_tpm.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_tracers/ocean_tpm_util.F90"}, {"namelist": "ocean_tracer_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "frazil_heating_after_vphysics", "description": " For computing frazil heating after the implicit vertical physics (which includes boundary fluxes), and after vertical convection. This is the recommended method. Default frazil_heating_after_vphysics=.false. "}, {"units": "years", "default": "0.0", "type_": "real", "name": "age_tracer_max_init", "description": " Initial maximum age tracer. This nml provides the ability to start an integration with an age tracer that is not initialized to zero, say if we took an age tracer from another spin-up. Default age_tracer_max_init=0.0. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "interpolate_tdiag_to_pbott", "description": " To linear interpolate the initial conditions for diagnostic tracers to the partial bottom cells.  Default interpolate_tdiag_to_pbott=.false. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "interpolate_tprog_to_pbott", "description": " To linear interpolate the initial conditions for prognostic tracers to the partial bottom cells.  Default interpolate_tprog_to_pbott=.true. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "compute_tmask_limit_on", "description": " For updating the tmaks_limit array. This calculation is recommended for the following physics and advection schemes: 1/ quicker advection 2/ neutral physics 3/ submesoscale closure. The default is compute_tmask_limit_on=.true., but if none of the above schemes is used, then some time savings can be realized by setting compute_tmask_limit_on=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "ocean_tpm_debug", "description": " For debugging ocean tracer package manager. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "write_a_restart", "description": " Set true to write a restart.  False setting only for rare cases where wish to benchmark model without measuring the cost of writing restarts and associated chksums. Default is write_a_restart=.true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "frazil_heating_before_vphysics", "description": " For computing frazil heating before the implicit vertical physics (which includes boundary fluxes), and before vertical convection. This is the order that CM2.0 and CM2.1 performed their calculations of frazil.  It is arguable that one should NOT do frazil until the end of a time step, after vertical physics and after surface boundary fluxes. Default frazil_heating_before_vphysics=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "use_tempsalt_check_range", "description": " To call a check to see that temperature and salinity are within their pre-selected range. Default use_tempsalt_check_range=.false. since this check may incur some cost that users should be aware of. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "tmask_limit_ts_same", "description": " tmask_limit is derived separately for the tracers.  However, it may be appropriate to have the mask be the same for temp and salinity, in which case the neutral physics fluxes are self-consistent.  But for some cases, such as when running with linear eos, may not wish to have the temp and salinity coupled when computing the mask. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "limit_age_tracer", "description": " Limit the values of age tracer to be less than total run time and greater than zero. Default limit_age_tracer=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_tracer_source", "description": " To remove the T_prog%source contribution to tracer evolution. For debugging purposes.  Default zero_tracer_source=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "inflow_nboundary", "description": " For adding an inflow transport from the northern boundary which brings in temp and salinity according to inflow data files. Default is inflow_nboundary=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging the tracer module "}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_tendency", "description": " If true, then will freeze the tracer fields. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "remap_depth_to_s_init", "description": " For remapping initial tracer distributions, generally determined according to depth vertical coordinates using the mom preprocessing schemes, onto s-coordinates.  This method is of use for initializing terrain following coordinate simulations with mom. "}], "filename": "src/mom5/ocean_tracers/ocean_tracer.F90"}, {"namelist": "ocean_tracer_advect_nml", "items": [{"units": null, "default": ".false.", "type_": "logical", "name": "zero_tracer_advect_vert", "description": " For debugging.  Set to .true. to turn off vertical advection. "}, {"units": null, "default": ".true.", "type_": "logical", "name": "write_a_restart", "description": " Set true to write a restart.  False setting only for rare cases where wish to benchmark model without measuring the cost of writing restarts and associated chksums. Default is write_a_restart=.true. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "limit_with_upwind", "description": " If true, will compute tracer fluxes entering a cell using upwind if the tracer value is outside a specified range. Implemented only for quick at this time. This is an ad hoc and incomplete attempt to maintain monotonicity with the quicker scheme. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "read_basin_mask", "description": " For reading in a mask that selects regions of the domain for performing gyre and overturning diagnostics. The basin-mask convention used at GFDL has Southern=1.0,Atlantic=2.0,Pacific=3.0,Arctic=4.0,Indian=5.0 Default read_basin_mask=.false., whereby basin_mask is set to tmask(k=1). "}, {"units": null, "default": ".false.", "type_": "logical", "name": "async_domain_update", "description": null}, {"units": null, "default": ".false.", "type_": "logical", "name": "zero_tracer_advect_horz", "description": " For debugging.  Set to .true. to turn off horizontal advection. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "debug_this_module", "description": " For debugging "}, {"units": null, "default": ".false.", "type_": "logical", "name": "advect_sweby_all", "description": " For running all tracers with sweby, thereby utilizing a bitwise same routine that reorganizes loops and can be faster for certain configurations. Default advect_sweby_all=.false. "}, {"units": null, "default": ".false.", "type_": "logical", "name": "psom_limit_prather", "description": " For running with the original Prather limiter for the PSOM scheme. The limiter is positive definite, but not monotonic.  This limiter is NOT recommended for most applications.  The default is psom_limit_prather=.false., since we prefer to use the limiter from Merryfield and Holloway (2003). "}], "filename": "src/mom5/ocean_tracers/ocean_tracer_advect.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_tracers/transport_matrix.F90"}, {"namelist": "ocean_wave_nml", "items": [{"units": null, "default": ".TRUE.", "type_": "logical", "name": "use_TMA", "description": null}, {"units": null, "default": ".TRUE.", "type_": "logical", "name": "damp_where_ice", "description": null}, {"units": null, "default": ".FALSE.", "type_": "logical", "name": "use_this_module", "description": null}, {"units": null, "default": ".TRUE.", "type_": "logical", "name": "write_a_restart", "description": null}, {"units": null, "default": "-10.", "type_": "real", "name": "wavedamp", "description": null}, {"units": null, "default": ".TRUE.", "type_": "logical", "name": "filter_wave_mom", "description": null}], "filename": "src/mom5/ocean_wave/ocean_wave.F90"}, {"namelist": null, "items": [], "filename": "src/mom5/ocean_wave/ocean_wave_type.F90"}]